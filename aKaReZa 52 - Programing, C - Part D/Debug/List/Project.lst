
AVRASM ver. 2.1.30  C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm Wed Jan 31 22:28:28 2024

C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1090): warning: Register r3 already defined by the .DEF directive
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1091): warning: Register r4 already defined by the .DEF directive
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1092): warning: Register r6 already defined by the .DEF directive
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1093): warning: Register r5 already defined by the .DEF directive
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1094): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _ans=R3
                 	.DEF _ans_msb=R4
                 	.DEF __lcd_x=R6
                 	.DEF __lcd_y=R5
                 	.DEF __lcd_maxx=R8
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0061 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000      	.DB  0x0,0x0
                 
                 _0x0:
000035 6e61
000036 3d73
000037 7525
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1138): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x61,0x6E,0x73,0x3D,0x25,0x75,0x0
                 _0x20003:
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1140): warning: .cseg .db misalignment - padding zero byte
000039 000f      	.DB  0xF
                 _0x20000:
00003a 6554
00003b 706d
00003c 253d
00003d 0064      	.DB  0x54,0x65,0x6D,0x70,0x3D,0x25,0x64,0x0
                 _0x40000:
00003e 6548
00003f 6c6c
000040 216f
000041 7000      	.DB  0x48,0x65,0x6C,0x6C,0x6F,0x21,0x0,0x70
000042 7553
000043 206d
000044 203d
000045 7525      	.DB  0x53,0x75,0x6D,0x20,0x3D,0x20,0x25,0x75
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1146): warning: .cseg .db misalignment - padding zero byte
000046 0000      	.DB  0x0
                 _0x2000003:
000047 c080      	.DB  0x80,0xC0
                 _0x2020000:
000048 4e2d
000049 4e41
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1150): warning: .cseg .db misalignment - padding zero byte
00004a 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1152): warning: .cseg .db misalignment - padding zero byte
00004b 0001      	.DB  0x1
                 _0x20A0000:
00004c 4e2d
00004d 4e41
00004e 4900
00004f 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Hossein\Desktop\CodeVision\Debug\List\Project.asm(1155): warning: .cseg .db misalignment - padding zero byte
000050 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000051 0002      	.DW  0x02
000052 0003      	.DW  0x03
000053 0068      	.DW  __REG_VARS*2
                 
000054 0001      	.DW  0x01
000055 0317      	.DW  _temp_S0010001000
000056 0072      	.DW  _0x20003*2
                 
000057 0007      	.DW  0x07
000058 0300      	.DW  _0x40003
000059 007c      	.DW  _0x40000*2
                 
00005a 0002      	.DW  0x02
00005b 0318      	.DW  __base_y_G100
00005c 008e      	.DW  _0x2000003*2
                 
00005d 0001      	.DW  0x01
00005e 031c      	.DW  __seed_G105
00005f 0096      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000060 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000061 94f8      	CLI
000062 27ee      	CLR  R30
000063 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000064 e0f1      	LDI  R31,1
000065 bff5      	OUT  MCUCR,R31
000066 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000067 e08d      	LDI  R24,(14-2)+1
000068 e0a2      	LDI  R26,2
000069 27bb      	CLR  R27
                 __CLEAR_REG:
00006a 93ed      	ST   X+,R30
00006b 958a      	DEC  R24
00006c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006f e0a0      	LDI  R26,LOW(__SRAM_START)
000070 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000071 93ed      	ST   X+,R30
000072 9701      	SBIW R24,1
000073 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000074 eae2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000075 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000076 9185      	LPM  R24,Z+
000077 9195      	LPM  R25,Z+
000078 9700      	SBIW R24,0
000079 f061      	BREQ __GLOBAL_INI_END
00007a 91a5      	LPM  R26,Z+
00007b 91b5      	LPM  R27,Z+
00007c 9005      	LPM  R0,Z+
00007d 9015      	LPM  R1,Z+
00007e 01bf      	MOVW R22,R30
00007f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000080 9005      	LPM  R0,Z+
000081 920d      	ST   X+,R0
000082 9701      	SBIW R24,1
000083 f7e1      	BRNE __GLOBAL_INI_LOOP
000084 01fb      	MOVW R30,R22
000085 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000086 e0e0      	LDI  R30,__GPIOR0_INIT
000087 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000088 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000089 bfed      	OUT  SPL,R30
00008a e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008c e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008d e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008e 940c 0090 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include "aKaReZa.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;
                 ;char lcd[16];
                 ;uint16_t ans=0;
                 ;
                 ;void main(void)
                 ; 0000 0007 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0008   lcd_init(16);
000090 e1a0      	LDI  R26,LOW(16)
000091 940e 015f 	CALL _lcd_init
                 ; 0000 0009   ans = Sum(25, 25);
000093 e1e9      	LDI  R30,LOW(25)
000094 93ea      	ST   -Y,R30
000095 e1a9      	LDI  R26,LOW(25)
000096 d01b      	RCALL _Sum
                +
000097 2e3e     +MOV R3 , R30
000098 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
                 ; 0000 000A   sprintf(lcd, "ans=%u", ans);
000099 940e 05f6 	CALL SUBOPT_0x0
                +
00009b e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00009c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00009d 93fa      	ST   -Y,R31
00009e 93ea      	ST   -Y,R30
                +
00009f 2de3     +MOV R30 , R3
0000a0 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
0000a1 940e 05fb 	CALL SUBOPT_0x1
                 ; 0000 000B   lcd_puts(lcd);
0000a3 940e 0604 	CALL SUBOPT_0x2
                 ; 0000 000C   delay_ms(1000);
0000a5 940e 0608 	CALL SUBOPT_0x3
                 ; 0000 000D   sayHello();
0000a7 940e 00e2 	CALL _sayHello
                 ; 0000 000E   delay_ms(1000);
0000a9 940e 0608 	CALL SUBOPT_0x3
                 ; 0000 000F   printSum();
0000ab 940e 00ea 	CALL _printSum
                 ; 0000 0010   while(1)
                 _0x3:
                 ; 0000 0011   {
                 ; 0000 0012     staticVarFun();
0000ad d012      	RCALL _staticVarFun
                 ; 0000 0013     delay_ms(1000);
0000ae 940e 0608 	CALL SUBOPT_0x3
                 ; 0000 0014   };
0000b0 cffc      	RJMP _0x3
                 ; 0000 0015 };
                 _0x6:
0000b1 cfff      	RJMP _0x6
                 ; .FEND
                 ;
                 ;#include "aKaReZa.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;extern char lcd[16];
                 ;extern uint16_t ans;
                 ;
                 ;uint16_t Sum(uint8_t a, uint8_t b)
                 ; 0001 0007 {
                 
                 	.CSEG
                 _Sum:
                 ; .FSTART _Sum
                 ; 0001 0008   uint16_t temp;
                 ; 0001 0009   temp = a+b;
0000b2 93aa      	ST   -Y,R26
0000b3 931a      	ST   -Y,R17
0000b4 930a      	ST   -Y,R16
                 ;	a -> Y+3
                 ;	b -> Y+2
                 ;	temp -> R16,R17
0000b5 81ab      	LDD  R26,Y+3
0000b6 27bb      	CLR  R27
0000b7 81ea      	LDD  R30,Y+2
0000b8 e0f0      	LDI  R31,0
0000b9 0fea      	ADD  R30,R26
0000ba 1ffb      	ADC  R31,R27
0000bb 018f      	MOVW R16,R30
                 ; 0001 000A   return temp;
0000bc 8119      	LDD  R17,Y+1
0000bd 8108      	LDD  R16,Y+0
0000be 940c 0553 	JMP  _0x20C0003
                 ; 0001 000B };
                 ; .FEND
                 ;
                 ;void staticVarFun(void)
                 ; 0001 000E {
                 _staticVarFun:
                 ; .FSTART _staticVarFun
                 ; 0001 000F   static uint8_t temp = 15;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0001 0010   temp++;
0000c0 91e0 0317 	LDS  R30,_temp_S0010001000
0000c2 5fef      	SUBI R30,-LOW(1)
0000c3 93e0 0317 	STS  _temp_S0010001000,R30
                 ; 0001 0011   sprintf(lcd, "Temp=%d", temp);
0000c5 940e 05f6 	CALL SUBOPT_0x0
                +
0000c7 e7e4     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
0000c8 e0f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
                 	__POINTW1FN _0x20000,0
0000c9 93fa      	ST   -Y,R31
0000ca 93ea      	ST   -Y,R30
0000cb 91e0 0317 	LDS  R30,_temp_S0010001000
0000cd 27ff      	CLR  R31
0000ce 2766      	CLR  R22
0000cf 2777      	CLR  R23
0000d0 940e 0945 	CALL __PUTPARD1
0000d2 e084      	LDI  R24,4
0000d3 940e 04b3 	CALL _sprintf
0000d5 9628      	ADIW R28,8
                 ; 0001 0012   lcd_gotoxy(0,0);
0000d6 e0e0      	LDI  R30,LOW(0)
0000d7 93ea      	ST   -Y,R30
0000d8 e0a0      	LDI  R26,LOW(0)
0000d9 940e 0120 	CALL _lcd_gotoxy
                 ; 0001 0013   lcd_puts(lcd);
0000db 940e 0604 	CALL SUBOPT_0x2
                 ; 0001 0014   ans++;
0000dd e0e1      	LDI  R30,LOW(1)
0000de e0f0      	LDI  R31,HIGH(1)
                +
0000df 0e3e     +ADD R3 , R30
0000e0 1e4f     +ADC R4 , R31
                 	__ADDWRR 3,4,30,31
                 ; 0001 0015 };
0000e1 9508      	RET
                 ; .FEND
                 ;#include "header2.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;
                 ;extern char lcd[16];
                 ;
                 ;void sayHello(void)
                 ; 0002 0006 {
                 
                 	.CSEG
                 _sayHello:
                 ; .FSTART _sayHello
                 ; 0002 0007   lcd_gotoxy(0,1);
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 93ea      	ST   -Y,R30
0000e4 e0a1      	LDI  R26,LOW(1)
0000e5 d03a      	RCALL _lcd_gotoxy
                 ; 0002 0008   lcd_puts("Hello!");
                +
0000e6 e0a0     +LDI R26 , LOW ( _0x40003 + ( 0 ) )
0000e7 e0b3     +LDI R27 , HIGH ( _0x40003 + ( 0 ) )
                 	__POINTW2MN _0x40003,0
0000e8 d065      	RCALL _lcd_puts
                 ; 0002 0009 };
0000e9 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x40003:
000300           	.BYTE 0x7
                 ;
                 ;void printSum(void)
                 ; 0002 000C {
                 
                 	.CSEG
                 _printSum:
                 ; .FSTART _printSum
                 ; 0002 000D   uint16_t temp;
                 ; 0002 000E   temp = Sum(10, 35);
0000ea 931a      	ST   -Y,R17
0000eb 930a      	ST   -Y,R16
                 ;	temp -> R16,R17
0000ec e0ea      	LDI  R30,LOW(10)
0000ed 93ea      	ST   -Y,R30
0000ee e2a3      	LDI  R26,LOW(35)
0000ef dfc2      	RCALL _Sum
0000f0 018f      	MOVW R16,R30
                 ; 0002 000F   sprintf(lcd, "pSum = %u", temp);
0000f1 940e 05f6 	CALL SUBOPT_0x0
                +
0000f3 e8e3     +LDI R30 , LOW ( 2 * _0x40000 + ( 7 ) )
0000f4 e0f0     +LDI R31 , HIGH ( 2 * _0x40000 + ( 7 ) )
                 	__POINTW1FN _0x40000,7
0000f5 93fa      	ST   -Y,R31
0000f6 93ea      	ST   -Y,R30
0000f7 01f8      	MOVW R30,R16
0000f8 940e 05fb 	CALL SUBOPT_0x1
                 ; 0002 0010   lcd_clear();
0000fa d032      	RCALL _lcd_clear
                 ; 0002 0011   lcd_puts(lcd);
0000fb 940e 0604 	CALL SUBOPT_0x2
                 ; 0002 0012 };
0000fd 9109      	LD   R16,Y+
0000fe 9119      	LD   R17,Y+
0000ff 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000100 93aa      	ST   -Y,R26
000101 b1e5      	IN   R30,0x5
000102 70ef      	ANDI R30,LOW(0xF)
000103 2fae      	MOV  R26,R30
000104 81e8      	LD   R30,Y
000105 7fe0      	ANDI R30,LOW(0xF0)
000106 2bea      	OR   R30,R26
000107 b9e5      	OUT  0x5,R30
                +
000108 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000109 958a     +DEC R24
00010a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00010b 9a2a      	SBI  0x5,2
                +
00010c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00010d 958a     +DEC R24
00010e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00010f 982a      	CBI  0x5,2
                +
000110 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000111 958a     +DEC R24
000112 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000113 c077      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000114 93aa      	ST   -Y,R26
000115 81a8      	LD   R26,Y
000116 dfe9      	RCALL __lcd_write_nibble_G100
000117 81e8          ld    r30,y
000118 95e2          swap  r30
000119 83e8          st    y,r30
00011a 81a8      	LD   R26,Y
00011b dfe4      	RCALL __lcd_write_nibble_G100
                +
00011c e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00011d 958a     +DEC R24
00011e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00011f c06b      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000120 93aa      	ST   -Y,R26
000121 81e8      	LD   R30,Y
000122 e0f0      	LDI  R31,0
000123 5ee8      	SUBI R30,LOW(-__base_y_G100)
000124 4ffc      	SBCI R31,HIGH(-__base_y_G100)
000125 81e0      	LD   R30,Z
000126 81a9      	LDD  R26,Y+1
000127 0fae      	ADD  R26,R30
000128 dfeb      	RCALL __lcd_write_data
000129 8069      	LDD  R6,Y+1
00012a 8058      	LDD  R5,Y+0
00012b 9622      	ADIW R28,2
00012c 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00012d e0a2      	LDI  R26,LOW(2)
00012e 940e 060c 	CALL SUBOPT_0x4
000130 e0ac      	LDI  R26,LOW(12)
000131 dfe2      	RCALL __lcd_write_data
000132 e0a1      	LDI  R26,LOW(1)
000133 940e 060c 	CALL SUBOPT_0x4
000135 e0e0      	LDI  R30,LOW(0)
000136 2e5e      	MOV  R5,R30
000137 2e6e      	MOV  R6,R30
000138 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000139 93aa      	ST   -Y,R26
00013a 81a8      	LD   R26,Y
00013b 30aa      	CPI  R26,LOW(0xA)
00013c f011      	BREQ _0x2000005
00013d 1468      	CP   R6,R8
00013e f048      	BRLO _0x2000004
                 _0x2000005:
00013f e0e0      	LDI  R30,LOW(0)
000140 93ea      	ST   -Y,R30
000141 9453      	INC  R5
000142 2da5      	MOV  R26,R5
000143 dfdc      	RCALL _lcd_gotoxy
000144 81a8      	LD   R26,Y
000145 30aa      	CPI  R26,LOW(0xA)
000146 f409      	BRNE _0x2000007
000147 c043      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
000148 9463      	INC  R6
000149 9a28      	SBI  0x5,0
00014a 81a8      	LD   R26,Y
00014b dfc8      	RCALL __lcd_write_data
00014c 9828      	CBI  0x5,0
00014d c03d      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00014e 93ba      	ST   -Y,R27
00014f 93aa      	ST   -Y,R26
000150 931a      	ST   -Y,R17
                 _0x2000008:
000151 81a9      	LDD  R26,Y+1
000152 81ba      	LDD  R27,Y+1+1
000153 91ed      	LD   R30,X+
000154 83a9      	STD  Y+1,R26
000155 83ba      	STD  Y+1+1,R27
000156 2f1e      	MOV  R17,R30
000157 30e0      	CPI  R30,0
000158 f019      	BREQ _0x200000A
000159 2fa1      	MOV  R26,R17
00015a dfde      	RCALL _lcd_putchar
00015b cff5      	RJMP _0x2000008
                 _0x200000A:
00015c 8118      	LDD  R17,Y+0
00015d 9623      	ADIW R28,3
00015e 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00015f 93aa      	ST   -Y,R26
000160 b1e4      	IN   R30,0x4
000161 6fe0      	ORI  R30,LOW(0xF0)
000162 b9e4      	OUT  0x4,R30
000163 9a22      	SBI  0x4,2
000164 9a20      	SBI  0x4,0
000165 9a21      	SBI  0x4,1
000166 982a      	CBI  0x5,2
000167 9828      	CBI  0x5,0
000168 9829      	CBI  0x5,1
000169 8088      	LDD  R8,Y+0
00016a 81e8      	LD   R30,Y
00016b 58e0      	SUBI R30,-LOW(128)
                +
00016c 93e0 031a+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00016e 81e8      	LD   R30,Y
00016f 54e0      	SUBI R30,-LOW(192)
                +
000170 93e0 031b+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000172 e1a4      	LDI  R26,LOW(20)
000173 e0b0      	LDI  R27,0
000174 940e 070e 	CALL _delay_ms
000176 940e 0612 	CALL SUBOPT_0x5
000178 940e 0612 	CALL SUBOPT_0x5
00017a 940e 0612 	CALL SUBOPT_0x5
00017c e2a0      	LDI  R26,LOW(32)
00017d df82      	RCALL __lcd_write_nibble_G100
                +
00017e ec88     +LDI R24 , LOW ( 200 )
00017f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000180 9701     +SBIW R24 , 1
000181 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000182 e2a8      	LDI  R26,LOW(40)
000183 df90      	RCALL __lcd_write_data
000184 e0a4      	LDI  R26,LOW(4)
000185 df8e      	RCALL __lcd_write_data
000186 e8a5      	LDI  R26,LOW(133)
000187 df8c      	RCALL __lcd_write_data
000188 e0a6      	LDI  R26,LOW(6)
000189 df8a      	RCALL __lcd_write_data
00018a dfa2      	RCALL _lcd_clear
                 _0x20C0006:
00018b 9621      	ADIW R28,1
00018c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00018d 93ba      	ST   -Y,R27
00018e 93aa      	ST   -Y,R26
00018f 931a      	ST   -Y,R17
000190 930a      	ST   -Y,R16
000191 81aa      	LDD  R26,Y+2
000192 81bb      	LDD  R27,Y+2+1
000193 9612      	ADIW R26,2
000194 940e 092c 	CALL __GETW1P
000196 9730      	SBIW R30,0
000197 f129      	BREQ _0x2020016
000198 81aa      	LDD  R26,Y+2
000199 81bb      	LDD  R27,Y+2+1
00019a 9614      	ADIW R26,4
00019b 940e 092c 	CALL __GETW1P
00019d 018f      	MOVW R16,R30
00019e 9730      	SBIW R30,0
00019f f061      	BREQ _0x2020018
                +
0001a0 3002     +CPI R16 , LOW ( 2 )
0001a1 e0e0     +LDI R30 , HIGH ( 2 )
0001a2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001a3 f080      	BRLO _0x2020019
0001a4 01f8      	MOVW R30,R16
0001a5 9731      	SBIW R30,1
0001a6 018f      	MOVW R16,R30
                +
0001a7 81aa     +LDD R26 , Y + 2
0001a8 81bb     +LDD R27 , Y + 2 + 1
0001a9 9614     +ADIW R26 , 4
0001aa 93ed     +ST X + , R30
0001ab 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020018:
0001ac 81aa      	LDD  R26,Y+2
0001ad 81bb      	LDD  R27,Y+2+1
0001ae 9612      	ADIW R26,2
0001af 940e 061a 	CALL SUBOPT_0x6
0001b1 9731      	SBIW R30,1
0001b2 81ac      	LDD  R26,Y+4
0001b3 83a0      	STD  Z+0,R26
                 _0x2020019:
0001b4 81aa      	LDD  R26,Y+2
0001b5 81bb      	LDD  R27,Y+2+1
0001b6 940e 092c 	CALL __GETW1P
0001b8 23ff      	TST  R31
0001b9 f012      	BRMI _0x202001A
0001ba 940e 061a 	CALL SUBOPT_0x6
                 _0x202001A:
0001bc c006      	RJMP _0x202001B
                 _0x2020016:
0001bd 81aa      	LDD  R26,Y+2
0001be 81bb      	LDD  R27,Y+2+1
0001bf efef      	LDI  R30,LOW(65535)
0001c0 efff      	LDI  R31,HIGH(65535)
0001c1 93ed      	ST   X+,R30
0001c2 93fc      	ST   X,R31
                 _0x202001B:
0001c3 8119      	LDD  R17,Y+1
0001c4 8108      	LDD  R16,Y+0
0001c5 9625      	ADIW R28,5
0001c6 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0001c7 940e 0620 	CALL SUBOPT_0x7
0001c9 e8e0      	LDI  R30,LOW(128)
0001ca 83ea      	STD  Y+2,R30
0001cb e3ef      	LDI  R30,LOW(63)
0001cc 83eb      	STD  Y+3,R30
0001cd 940e 0962 	CALL __SAVELOCR4
0001cf 85ee      	LDD  R30,Y+14
0001d0 85ff      	LDD  R31,Y+14+1
0001d1 3fef      	CPI  R30,LOW(0xFFFF)
0001d2 efaf      	LDI  R26,HIGH(0xFFFF)
0001d3 07fa      	CPC  R31,R26
0001d4 f449      	BRNE _0x202001F
0001d5 85e8      	LDD  R30,Y+8
0001d6 85f9      	LDD  R31,Y+8+1
0001d7 93fa      	ST   -Y,R31
0001d8 93ea      	ST   -Y,R30
                +
0001d9 e9a0     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
0001da e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
0001db 940e 04e7 	CALL _strcpyf
0001dd c0b7      	RJMP _0x20C0005
                 _0x202001F:
0001de 3fef      	CPI  R30,LOW(0x7FFF)
0001df e7af      	LDI  R26,HIGH(0x7FFF)
0001e0 07fa      	CPC  R31,R26
0001e1 f449      	BRNE _0x202001E
0001e2 85e8      	LDD  R30,Y+8
0001e3 85f9      	LDD  R31,Y+8+1
0001e4 93fa      	ST   -Y,R31
0001e5 93ea      	ST   -Y,R30
                +
0001e6 e9a1     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
0001e7 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
0001e8 940e 04e7 	CALL _strcpyf
0001ea c0aa      	RJMP _0x20C0005
                 _0x202001E:
0001eb 85ab      	LDD  R26,Y+11
0001ec 30a7      	CPI  R26,LOW(0x7)
0001ed f010      	BRLO _0x2020021
0001ee e0e6      	LDI  R30,LOW(6)
0001ef 87eb      	STD  Y+11,R30
                 _0x2020021:
0001f0 851b      	LDD  R17,Y+11
                 _0x2020022:
0001f1 2fe1      	MOV  R30,R17
0001f2 5011      	SUBI R17,1
0001f3 30e0      	CPI  R30,0
0001f4 f019      	BREQ _0x2020024
0001f5 940e 0627 	CALL SUBOPT_0x8
0001f7 cff9      	RJMP _0x2020022
                 _0x2020024:
                +
0001f8 85ec     +LDD R30 , Y + 12
0001f9 85fd     +LDD R31 , Y + 12 + 1
0001fa 856e     +LDD R22 , Y + 12 + 2
0001fb 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0001fc 940e 095c 	CALL __CPD10
0001fe f421      	BRNE _0x2020025
0001ff e030      	LDI  R19,LOW(0)
000200 940e 0627 	CALL SUBOPT_0x8
000202 c02d      	RJMP _0x2020026
                 _0x2020025:
000203 853b      	LDD  R19,Y+11
000204 940e 0636 	CALL SUBOPT_0x9
000206 f009      	BREQ PC+2
000207 f408      	BRCC PC+2
000208 c00b      	RJMP _0x2020027
000209 940e 0627 	CALL SUBOPT_0x8
                 _0x2020028:
00020b 940e 0636 	CALL SUBOPT_0x9
00020d f028      	BRLO _0x202002A
00020e 940e 0641 	CALL SUBOPT_0xA
000210 940e 0646 	CALL SUBOPT_0xB
000212 cff8      	RJMP _0x2020028
                 _0x202002A:
000213 c00d      	RJMP _0x202002B
                 _0x2020027:
                 _0x202002C:
000214 940e 0636 	CALL SUBOPT_0x9
000216 f440      	BRSH _0x202002E
000217 940e 0641 	CALL SUBOPT_0xA
000219 940e 0652 	CALL SUBOPT_0xC
00021b 940e 0659 	CALL SUBOPT_0xD
00021d 5031      	SUBI R19,LOW(1)
00021e cff5      	RJMP _0x202002C
                 _0x202002E:
00021f 940e 0627 	CALL SUBOPT_0x8
                 _0x202002B:
                +
000221 85ec     +LDD R30 , Y + 12
000222 85fd     +LDD R31 , Y + 12 + 1
000223 856e     +LDD R22 , Y + 12 + 2
000224 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000225 940e 065e 	CALL SUBOPT_0xE
000227 940e 0659 	CALL SUBOPT_0xD
000229 940e 0636 	CALL SUBOPT_0x9
00022b f020      	BRLO _0x202002F
00022c 940e 0641 	CALL SUBOPT_0xA
00022e 940e 0646 	CALL SUBOPT_0xB
                 _0x202002F:
                 _0x2020026:
000230 e010      	LDI  R17,LOW(0)
                 _0x2020030:
000231 85eb      	LDD  R30,Y+11
000232 17e1      	CP   R30,R17
000233 f1a8      	BRLO _0x2020032
                +
000234 81ac     +LDD R26 , Y + 4
000235 81bd     +LDD R27 , Y + 4 + 1
000236 818e     +LDD R24 , Y + 4 + 2
000237 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000238 940e 0665 	CALL SUBOPT_0xF
00023a 940e 065e 	CALL SUBOPT_0xE
00023c 01df      	MOVW R26,R30
00023d 01cb      	MOVW R24,R22
00023e 940e 053e 	CALL _floor
                +
000240 83ec     +STD Y + 4 , R30
000241 83fd     +STD Y + 4 + 1 , R31
000242 836e     +STD Y + 4 + 2 , R22
000243 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000244 940e 0641 	CALL SUBOPT_0xA
000246 940e 085c 	CALL __DIVF21
000248 940e 074b 	CALL __CFD1U
00024a 2f0e      	MOV  R16,R30
00024b 940e 066c 	CALL SUBOPT_0x10
00024d 940e 0673 	CALL SUBOPT_0x11
00024f 27ff      	CLR  R31
000250 2766      	CLR  R22
000251 2777      	CLR  R23
000252 940e 0784 	CALL __CDF1
                +
000254 81ac     +LDD R26 , Y + 4
000255 81bd     +LDD R27 , Y + 4 + 1
000256 818e     +LDD R24 , Y + 4 + 2
000257 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000258 940e 080e 	CALL __MULF12
00025a 940e 0641 	CALL SUBOPT_0xA
00025c 940e 0678 	CALL SUBOPT_0x12
00025e 940e 0659 	CALL SUBOPT_0xD
000260 2fe1      	MOV  R30,R17
000261 5f1f      	SUBI R17,-1
000262 30e0      	CPI  R30,0
000263 f669      	BRNE _0x2020030
000264 940e 066c 	CALL SUBOPT_0x10
000266 e2ee      	LDI  R30,LOW(46)
000267 93ec      	ST   X,R30
000268 cfc8      	RJMP _0x2020030
                 _0x2020032:
000269 940e 067d 	CALL SUBOPT_0x13
00026b 9731      	SBIW R30,1
00026c 85aa      	LDD  R26,Y+10
00026d 83a0      	STD  Z+0,R26
00026e 3030      	CPI  R19,0
00026f f42c      	BRGE _0x2020034
000270 9531      	NEG  R19
000271 85a8      	LDD  R26,Y+8
000272 85b9      	LDD  R27,Y+8+1
000273 e2ed      	LDI  R30,LOW(45)
000274 c003      	RJMP _0x2020119
                 _0x2020034:
000275 85a8      	LDD  R26,Y+8
000276 85b9      	LDD  R27,Y+8+1
000277 e2eb      	LDI  R30,LOW(43)
                 _0x2020119:
000278 93ec      	ST   X,R30
000279 940e 067d 	CALL SUBOPT_0x13
00027b 940e 067d 	CALL SUBOPT_0x13
00027d 9731      	SBIW R30,1
00027e 01bf      	MOVW R22,R30
00027f 2fa3      	MOV  R26,R19
000280 e0ea      	LDI  R30,LOW(10)
000281 940e 08e6 	CALL __DIVB21
000283 5de0      	SUBI R30,-LOW(48)
000284 01db      	MOVW R26,R22
000285 93ec      	ST   X,R30
000286 940e 067d 	CALL SUBOPT_0x13
000288 9731      	SBIW R30,1
000289 01bf      	MOVW R22,R30
00028a 2fa3      	MOV  R26,R19
00028b e0ea      	LDI  R30,LOW(10)
00028c 940e 0910 	CALL __MODB21
00028e 5de0      	SUBI R30,-LOW(48)
00028f 01db      	MOVW R26,R22
000290 93ec      	ST   X,R30
000291 85a8      	LDD  R26,Y+8
000292 85b9      	LDD  R27,Y+8+1
000293 e0e0      	LDI  R30,LOW(0)
000294 93ec      	ST   X,R30
                 _0x20C0005:
000295 940e 0969 	CALL __LOADLOCR4
000297 9660      	ADIW R28,16
000298 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000299 93ba      	ST   -Y,R27
00029a 93aa      	ST   -Y,R26
00029b 97ef      	SBIW R28,63
00029c 9761      	SBIW R28,17
00029d 940e 0960 	CALL __SAVELOCR6
00029f e010      	LDI  R17,0
                +
0002a0 01fe     +MOVW R30 , R28
0002a1 5ae8     +SUBI R30 , LOW ( - 88 )
0002a2 4fff     +SBCI R31 , HIGH ( - 88 )
0002a3 9001     +LD R0 , Z +
0002a4 81f0     +LD R31 , Z
0002a5 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0002a6 87e8      	STD  Y+8,R30
0002a7 87f9      	STD  Y+8+1,R31
                +
0002a8 01fe     +MOVW R30 , R28
0002a9 5aea     +SUBI R30 , LOW ( - 86 )
0002aa 4fff     +SBCI R31 , HIGH ( - 86 )
0002ab 9001     +LD R0 , Z +
0002ac 81f0     +LD R31 , Z
0002ad 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002ae 83ee      	STD  Y+6,R30
0002af 83ff      	STD  Y+6+1,R31
0002b0 81ae      	LDD  R26,Y+6
0002b1 81bf      	LDD  R27,Y+6+1
0002b2 e0e0      	LDI  R30,LOW(0)
0002b3 e0f0      	LDI  R31,HIGH(0)
0002b4 93ed      	ST   X+,R30
0002b5 93fc      	ST   X,R31
                 _0x2020036:
0002b6 01de      	MOVW R26,R28
0002b7 5aa4      	SUBI R26,LOW(-(92))
0002b8 4fbf      	SBCI R27,HIGH(-(92))
0002b9 940e 061a 	CALL SUBOPT_0x6
0002bb 9731      	SBIW R30,1
0002bc 91e4      	LPM  R30,Z
0002bd 2f2e      	MOV  R18,R30
0002be 30e0      	CPI  R30,0
0002bf f409      	BRNE PC+2
0002c0 c1e9      	RJMP _0x2020038
0002c1 2fe1      	MOV  R30,R17
0002c2 30e0      	CPI  R30,0
0002c3 f439      	BRNE _0x202003C
0002c4 3225      	CPI  R18,37
0002c5 f411      	BRNE _0x202003D
0002c6 e011      	LDI  R17,LOW(1)
0002c7 c002      	RJMP _0x202003E
                 _0x202003D:
0002c8 940e 0683 	CALL SUBOPT_0x14
                 _0x202003E:
0002ca c1de      	RJMP _0x202003B
                 _0x202003C:
0002cb 30e1      	CPI  R30,LOW(0x1)
0002cc f4c1      	BRNE _0x202003F
0002cd 3225      	CPI  R18,37
0002ce f419      	BRNE _0x2020040
0002cf 940e 0683 	CALL SUBOPT_0x14
0002d1 c1d6      	RJMP _0x202011A
                 _0x2020040:
0002d2 e012      	LDI  R17,LOW(2)
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 8bed      	STD  Y+21,R30
0002d5 e000      	LDI  R16,LOW(0)
0002d6 322d      	CPI  R18,45
0002d7 f411      	BRNE _0x2020041
0002d8 e001      	LDI  R16,LOW(1)
0002d9 c1cf      	RJMP _0x202003B
                 _0x2020041:
0002da 322b      	CPI  R18,43
0002db f419      	BRNE _0x2020042
0002dc e2eb      	LDI  R30,LOW(43)
0002dd 8bed      	STD  Y+21,R30
0002de c1ca      	RJMP _0x202003B
                 _0x2020042:
0002df 3220      	CPI  R18,32
0002e0 f419      	BRNE _0x2020043
0002e1 e2e0      	LDI  R30,LOW(32)
0002e2 8bed      	STD  Y+21,R30
0002e3 c1c5      	RJMP _0x202003B
                 _0x2020043:
0002e4 c002      	RJMP _0x2020044
                 _0x202003F:
0002e5 30e2      	CPI  R30,LOW(0x2)
0002e6 f439      	BRNE _0x2020045
                 _0x2020044:
0002e7 e050      	LDI  R21,LOW(0)
0002e8 e013      	LDI  R17,LOW(3)
0002e9 3320      	CPI  R18,48
0002ea f411      	BRNE _0x2020046
0002eb 6800      	ORI  R16,LOW(128)
0002ec c1bc      	RJMP _0x202003B
                 _0x2020046:
0002ed c002      	RJMP _0x2020047
                 _0x2020045:
0002ee 30e3      	CPI  R30,LOW(0x3)
0002ef f491      	BRNE _0x2020048
                 _0x2020047:
0002f0 3320      	CPI  R18,48
0002f1 f010      	BRLO _0x202004A
0002f2 332a      	CPI  R18,58
0002f3 f008      	BRLO _0x202004B
                 _0x202004A:
0002f4 c007      	RJMP _0x2020049
                 _0x202004B:
0002f5 e0aa      	LDI  R26,LOW(10)
0002f6 9f5a      	MUL  R21,R26
0002f7 2d50      	MOV  R21,R0
0002f8 2fe2      	MOV  R30,R18
0002f9 53e0      	SUBI R30,LOW(48)
0002fa 0f5e      	ADD  R21,R30
0002fb c1ad      	RJMP _0x202003B
                 _0x2020049:
0002fc e040      	LDI  R20,LOW(0)
0002fd 322e      	CPI  R18,46
0002fe f411      	BRNE _0x202004C
0002ff e014      	LDI  R17,LOW(4)
000300 c1a8      	RJMP _0x202003B
                 _0x202004C:
000301 c00f      	RJMP _0x202004D
                 _0x2020048:
000302 30e4      	CPI  R30,LOW(0x4)
000303 f499      	BRNE _0x202004F
000304 3320      	CPI  R18,48
000305 f010      	BRLO _0x2020051
000306 332a      	CPI  R18,58
000307 f008      	BRLO _0x2020052
                 _0x2020051:
000308 c008      	RJMP _0x2020050
                 _0x2020052:
000309 6200      	ORI  R16,LOW(32)
00030a e0aa      	LDI  R26,LOW(10)
00030b 9f4a      	MUL  R20,R26
00030c 2d40      	MOV  R20,R0
00030d 2fe2      	MOV  R30,R18
00030e 53e0      	SUBI R30,LOW(48)
00030f 0f4e      	ADD  R20,R30
000310 c198      	RJMP _0x202003B
                 _0x2020050:
                 _0x202004D:
000311 362c      	CPI  R18,108
000312 f419      	BRNE _0x2020053
000313 6002      	ORI  R16,LOW(2)
000314 e015      	LDI  R17,LOW(5)
000315 c193      	RJMP _0x202003B
                 _0x2020053:
000316 c003      	RJMP _0x2020054
                 _0x202004F:
000317 30e5      	CPI  R30,LOW(0x5)
000318 f009      	BREQ PC+2
000319 c18f      	RJMP _0x202003B
                 _0x2020054:
00031a 2fe2      	MOV  R30,R18
00031b 36e3      	CPI  R30,LOW(0x63)
00031c f459      	BRNE _0x2020059
00031d 940e 068a 	CALL SUBOPT_0x15
00031f 940e 0691 	CALL SUBOPT_0x16
000321 940e 068a 	CALL SUBOPT_0x15
000323 81a4      	LDD  R26,Z+4
000324 93aa      	ST   -Y,R26
000325 940e 0698 	CALL SUBOPT_0x17
000327 c180      	RJMP _0x202005A
                 _0x2020059:
000328 34e5      	CPI  R30,LOW(0x45)
000329 f011      	BREQ _0x202005D
00032a 36e5      	CPI  R30,LOW(0x65)
00032b f409      	BRNE _0x202005E
                 _0x202005D:
00032c c003      	RJMP _0x202005F
                 _0x202005E:
00032d 36e6      	CPI  R30,LOW(0x66)
00032e f009      	BREQ PC+2
00032f c048      	RJMP _0x2020060
                 _0x202005F:
000330 01fe      	MOVW R30,R28
000331 9676      	ADIW R30,22
000332 87ee      	STD  Y+14,R30
000333 87ff      	STD  Y+14+1,R31
000334 940e 069e 	CALL SUBOPT_0x18
000336 940e 0930 	CALL __GETD1P
000338 940e 06a5 	CALL SUBOPT_0x19
00033a 940e 06aa 	CALL SUBOPT_0x1A
00033c 85ad      	LDD  R26,Y+13
00033d 23aa      	TST  R26
00033e f032      	BRMI _0x2020061
00033f 89ad      	LDD  R26,Y+21
000340 32ab      	CPI  R26,LOW(0x2B)
000341 f059      	BREQ _0x2020063
000342 32a0      	CPI  R26,LOW(0x20)
000343 f081      	BREQ _0x2020065
000344 c017      	RJMP _0x2020066
                 _0x2020061:
000345 940e 06ac 	CALL SUBOPT_0x1B
000347 940e 0718 	CALL __ANEGF1
000349 940e 06a5 	CALL SUBOPT_0x19
00034b e2ed      	LDI  R30,LOW(45)
00034c 8bed      	STD  Y+21,R30
                 _0x2020063:
00034d ff07      	SBRS R16,7
00034e c005      	RJMP _0x2020067
00034f 89ed      	LDD  R30,Y+21
000350 93ea      	ST   -Y,R30
000351 940e 0698 	CALL SUBOPT_0x17
000353 c008      	RJMP _0x2020068
                 _0x2020067:
                 _0x2020065:
000354 85ee      	LDD  R30,Y+14
000355 85ff      	LDD  R31,Y+14+1
000356 9631      	ADIW R30,1
000357 87ee      	STD  Y+14,R30
000358 87ff      	STD  Y+14+1,R31
000359 9731      	SBIW R30,1
00035a 89ad      	LDD  R26,Y+21
00035b 83a0      	STD  Z+0,R26
                 _0x2020068:
                 _0x2020066:
00035c ff05      	SBRS R16,5
00035d e046      	LDI  R20,LOW(6)
00035e 3626      	CPI  R18,102
00035f f451      	BRNE _0x202006A
000360 940e 06ac 	CALL SUBOPT_0x1B
000362 940e 0945 	CALL __PUTPARD1
000364 934a      	ST   -Y,R20
000365 89ab      	LDD  R26,Y+19
000366 89bc      	LDD  R27,Y+19+1
000367 940e 0555 	CALL _ftoa
000369 c009      	RJMP _0x202006B
                 _0x202006A:
00036a 940e 06ac 	CALL SUBOPT_0x1B
00036c 940e 0945 	CALL __PUTPARD1
00036e 934a      	ST   -Y,R20
00036f 932a      	ST   -Y,R18
000370 89ac      	LDD  R26,Y+20
000371 89bd      	LDD  R27,Y+20+1
000372 de54      	RCALL __ftoe_G101
                 _0x202006B:
000373 01fe      	MOVW R30,R28
000374 9676      	ADIW R30,22
000375 940e 06b1 	CALL SUBOPT_0x1C
000377 c01e      	RJMP _0x202006C
                 _0x2020060:
000378 37e3      	CPI  R30,LOW(0x73)
000379 f439      	BRNE _0x202006E
00037a 940e 06aa 	CALL SUBOPT_0x1A
00037c 940e 06b9 	CALL SUBOPT_0x1D
00037e 940e 06b1 	CALL SUBOPT_0x1C
000380 c00e      	RJMP _0x202006F
                 _0x202006E:
000381 37e0      	CPI  R30,LOW(0x70)
000382 f4c1      	BRNE _0x2020071
000383 940e 06aa 	CALL SUBOPT_0x1A
000385 940e 06b9 	CALL SUBOPT_0x1D
000387 87ee      	STD  Y+14,R30
000388 87ff      	STD  Y+14+1,R31
000389 85ae      	LDD  R26,Y+14
00038a 85bf      	LDD  R27,Y+14+1
00038b 940e 0500 	CALL _strlenf
00038d 2f1e      	MOV  R17,R30
00038e 6008      	ORI  R16,LOW(8)
                 _0x202006F:
00038f 770f      	ANDI R16,LOW(127)
000390 3040      	CPI  R20,0
000391 f011      	BREQ _0x2020073
000392 1741      	CP   R20,R17
000393 f008      	BRLO _0x2020074
                 _0x2020073:
000394 c001      	RJMP _0x2020072
                 _0x2020074:
000395 2f14      	MOV  R17,R20
                 _0x2020072:
                 _0x202006C:
000396 e040      	LDI  R20,LOW(0)
000397 e0e0      	LDI  R30,LOW(0)
000398 8bec      	STD  Y+20,R30
000399 e030      	LDI  R19,LOW(0)
00039a c06d      	RJMP _0x2020075
                 _0x2020071:
00039b 36e4      	CPI  R30,LOW(0x64)
00039c f011      	BREQ _0x2020078
00039d 36e9      	CPI  R30,LOW(0x69)
00039e f411      	BRNE _0x2020079
                 _0x2020078:
00039f 6004      	ORI  R16,LOW(4)
0003a0 c002      	RJMP _0x202007A
                 _0x2020079:
0003a1 37e5      	CPI  R30,LOW(0x75)
0003a2 f4a1      	BRNE _0x202007B
                 _0x202007A:
0003a3 e0ea      	LDI  R30,LOW(10)
0003a4 8bec      	STD  Y+20,R30
0003a5 ff01      	SBRS R16,1
0003a6 c008      	RJMP _0x202007C
                +
0003a7 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0003a8 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0003a9 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003aa e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003ab 940e 06be 	CALL SUBOPT_0x1E
0003ad e01a      	LDI  R17,LOW(10)
0003ae c022      	RJMP _0x202007D
                 _0x202007C:
                +
0003af e1e0     +LDI R30 , LOW ( 0x2710 )
0003b0 e2f7     +LDI R31 , HIGH ( 0x2710 )
0003b1 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003b2 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003b3 940e 06be 	CALL SUBOPT_0x1E
0003b5 e015      	LDI  R17,LOW(5)
0003b6 c01a      	RJMP _0x202007D
                 _0x202007B:
0003b7 35e8      	CPI  R30,LOW(0x58)
0003b8 f411      	BRNE _0x202007F
0003b9 6008      	ORI  R16,LOW(8)
0003ba c003      	RJMP _0x2020080
                 _0x202007F:
0003bb 37e8      	CPI  R30,LOW(0x78)
0003bc f009      	BREQ PC+2
0003bd c0ea      	RJMP _0x20200BE
                 _0x2020080:
0003be e1e0      	LDI  R30,LOW(16)
0003bf 8bec      	STD  Y+20,R30
0003c0 ff01      	SBRS R16,1
0003c1 c008      	RJMP _0x2020082
                +
0003c2 e0e0     +LDI R30 , LOW ( 0x10000000 )
0003c3 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0003c4 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0003c5 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0003c6 940e 06be 	CALL SUBOPT_0x1E
0003c8 e018      	LDI  R17,LOW(8)
0003c9 c007      	RJMP _0x202007D
                 _0x2020082:
                +
0003ca e0e0     +LDI R30 , LOW ( 0x1000 )
0003cb e1f0     +LDI R31 , HIGH ( 0x1000 )
0003cc e060     +LDI R22 , BYTE3 ( 0x1000 )
0003cd e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0003ce 940e 06be 	CALL SUBOPT_0x1E
0003d0 e014      	LDI  R17,LOW(4)
                 _0x202007D:
0003d1 3040      	CPI  R20,0
0003d2 f011      	BREQ _0x2020083
0003d3 770f      	ANDI R16,LOW(127)
0003d4 c001      	RJMP _0x2020084
                 _0x2020083:
0003d5 e041      	LDI  R20,LOW(1)
                 _0x2020084:
0003d6 ff01      	SBRS R16,1
0003d7 c008      	RJMP _0x2020085
0003d8 940e 06aa 	CALL SUBOPT_0x1A
0003da 940e 069e 	CALL SUBOPT_0x18
0003dc 9614      	ADIW R26,4
0003dd 940e 0930 	CALL __GETD1P
0003df c00f      	RJMP _0x202011B
                 _0x2020085:
0003e0 ff02      	SBRS R16,2
0003e1 c007      	RJMP _0x2020087
0003e2 940e 06aa 	CALL SUBOPT_0x1A
0003e4 940e 06b9 	CALL SUBOPT_0x1D
0003e6 940e 08d3 	CALL __CWD1
0003e8 c006      	RJMP _0x202011B
                 _0x2020087:
0003e9 940e 06aa 	CALL SUBOPT_0x1A
0003eb 940e 06b9 	CALL SUBOPT_0x1D
0003ed 2766      	CLR  R22
0003ee 2777      	CLR  R23
                 _0x202011B:
                +
0003ef 87ea     +STD Y + 10 , R30
0003f0 87fb     +STD Y + 10 + 1 , R31
0003f1 876c     +STD Y + 10 + 2 , R22
0003f2 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0003f3 ff02      	SBRS R16,2
0003f4 c012      	RJMP _0x2020089
0003f5 85ad      	LDD  R26,Y+13
0003f6 23aa      	TST  R26
0003f7 f442      	BRPL _0x202008A
0003f8 940e 06ac 	CALL SUBOPT_0x1B
0003fa 940e 08c5 	CALL __ANEGD1
0003fc 940e 06a5 	CALL SUBOPT_0x19
0003fe e2ed      	LDI  R30,LOW(45)
0003ff 8bed      	STD  Y+21,R30
                 _0x202008A:
000400 89ed      	LDD  R30,Y+21
000401 30e0      	CPI  R30,0
000402 f019      	BREQ _0x202008B
000403 5f1f      	SUBI R17,-LOW(1)
000404 5f4f      	SUBI R20,-LOW(1)
000405 c001      	RJMP _0x202008C
                 _0x202008B:
000406 7f0b      	ANDI R16,LOW(251)
                 _0x202008C:
                 _0x2020089:
000407 2f34      	MOV  R19,R20
                 _0x2020075:
000408 fd00      	SBRC R16,0
000409 c014      	RJMP _0x202008D
                 _0x202008E:
00040a 1715      	CP   R17,R21
00040b f410      	BRSH _0x2020091
00040c 1735      	CP   R19,R21
00040d f008      	BRLO _0x2020092
                 _0x2020091:
00040e c00f      	RJMP _0x2020090
                 _0x2020092:
00040f ff07      	SBRS R16,7
000410 c008      	RJMP _0x2020093
000411 ff02      	SBRS R16,2
000412 c004      	RJMP _0x2020094
000413 7f0b      	ANDI R16,LOW(251)
000414 892d      	LDD  R18,Y+21
000415 5011      	SUBI R17,LOW(1)
000416 c001      	RJMP _0x2020095
                 _0x2020094:
000417 e320      	LDI  R18,LOW(48)
                 _0x2020095:
000418 c001      	RJMP _0x2020096
                 _0x2020093:
000419 e220      	LDI  R18,LOW(32)
                 _0x2020096:
00041a 940e 0683 	CALL SUBOPT_0x14
00041c 5051      	SUBI R21,LOW(1)
00041d cfec      	RJMP _0x202008E
                 _0x2020090:
                 _0x202008D:
                 _0x2020097:
00041e 1714      	CP   R17,R20
00041f f490      	BRSH _0x2020099
000420 6100      	ORI  R16,LOW(16)
000421 ff02      	SBRS R16,2
000422 c006      	RJMP _0x202009A
000423 940e 06c3 	CALL SUBOPT_0x1F
000425 f009      	BREQ _0x202009B
000426 5051      	SUBI R21,LOW(1)
                 _0x202009B:
000427 5011      	SUBI R17,LOW(1)
000428 5041      	SUBI R20,LOW(1)
                 _0x202009A:
000429 e3e0      	LDI  R30,LOW(48)
00042a 93ea      	ST   -Y,R30
00042b 940e 0698 	CALL SUBOPT_0x17
00042d 3050      	CPI  R21,0
00042e f009      	BREQ _0x202009C
00042f 5051      	SUBI R21,LOW(1)
                 _0x202009C:
000430 5041      	SUBI R20,LOW(1)
000431 cfec      	RJMP _0x2020097
                 _0x2020099:
000432 2f31      	MOV  R19,R17
000433 89ec      	LDD  R30,Y+20
000434 30e0      	CPI  R30,0
000435 f4b9      	BRNE _0x202009D
                 _0x202009E:
000436 3030      	CPI  R19,0
000437 f0a1      	BREQ _0x20200A0
000438 ff03      	SBRS R16,3
000439 c006      	RJMP _0x20200A1
00043a 85ee      	LDD  R30,Y+14
00043b 85ff      	LDD  R31,Y+14+1
00043c 9125      	LPM  R18,Z+
00043d 87ee      	STD  Y+14,R30
00043e 87ff      	STD  Y+14+1,R31
00043f c005      	RJMP _0x20200A2
                 _0x20200A1:
000440 85ae      	LDD  R26,Y+14
000441 85bf      	LDD  R27,Y+14+1
000442 912d      	LD   R18,X+
000443 87ae      	STD  Y+14,R26
000444 87bf      	STD  Y+14+1,R27
                 _0x20200A2:
000445 940e 0683 	CALL SUBOPT_0x14
000447 3050      	CPI  R21,0
000448 f009      	BREQ _0x20200A3
000449 5051      	SUBI R21,LOW(1)
                 _0x20200A3:
00044a 5031      	SUBI R19,LOW(1)
00044b cfea      	RJMP _0x202009E
                 _0x20200A0:
00044c c051      	RJMP _0x20200A4
                 _0x202009D:
                 _0x20200A6:
00044d 940e 06d5 	CALL SUBOPT_0x20
00044f 940e 08eb 	CALL __DIVD21U
000451 2f2e      	MOV  R18,R30
000452 302a      	CPI  R18,10
000453 f030      	BRLO _0x20200A8
000454 ff03      	SBRS R16,3
000455 c002      	RJMP _0x20200A9
000456 5c29      	SUBI R18,-LOW(55)
000457 c001      	RJMP _0x20200AA
                 _0x20200A9:
000458 5a29      	SUBI R18,-LOW(87)
                 _0x20200AA:
000459 c001      	RJMP _0x20200AB
                 _0x20200A8:
00045a 5d20      	SUBI R18,-LOW(48)
                 _0x20200AB:
00045b fd04      	SBRC R16,4
00045c c021      	RJMP _0x20200AD
00045d 3321      	CPI  R18,49
00045e f460      	BRSH _0x20200AF
                +
00045f 89a8     +LDD R26 , Y + 16
000460 89b9     +LDD R27 , Y + 16 + 1
000461 898a     +LDD R24 , Y + 16 + 2
000462 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000463 30a1     +CPI R26 , LOW ( 0x1 )
000464 e0e0     +LDI R30 , HIGH ( 0x1 )
000465 07be     +CPC R27 , R30
000466 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000467 078e     +CPC R24 , R30
000468 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000469 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00046a f409      	BRNE _0x20200AE
                 _0x20200AF:
00046b c00b      	RJMP _0x20200B1
                 _0x20200AE:
00046c 1743      	CP   R20,R19
00046d f440      	BRSH _0x202011C
00046e 1753      	CP   R21,R19
00046f f010      	BRLO _0x20200B4
000470 ff00      	SBRS R16,0
000471 c001      	RJMP _0x20200B5
                 _0x20200B4:
000472 c010      	RJMP _0x20200B3
                 _0x20200B5:
000473 e220      	LDI  R18,LOW(32)
000474 ff07      	SBRS R16,7
000475 c008      	RJMP _0x20200B6
                 _0x202011C:
000476 e320      	LDI  R18,LOW(48)
                 _0x20200B1:
000477 6100      	ORI  R16,LOW(16)
000478 ff02      	SBRS R16,2
000479 c004      	RJMP _0x20200B7
00047a 940e 06c3 	CALL SUBOPT_0x1F
00047c f009      	BREQ _0x20200B8
00047d 5051      	SUBI R21,LOW(1)
                 _0x20200B8:
                 _0x20200B7:
                 _0x20200B6:
                 _0x20200AD:
00047e 940e 0683 	CALL SUBOPT_0x14
000480 3050      	CPI  R21,0
000481 f009      	BREQ _0x20200B9
000482 5051      	SUBI R21,LOW(1)
                 _0x20200B9:
                 _0x20200B3:
000483 5031      	SUBI R19,LOW(1)
000484 940e 06d5 	CALL SUBOPT_0x20
000486 940e 091c 	CALL __MODD21U
000488 940e 06a5 	CALL SUBOPT_0x19
00048a 89ec      	LDD  R30,Y+20
                +
00048b 89a8     +LDD R26 , Y + 16
00048c 89b9     +LDD R27 , Y + 16 + 1
00048d 898a     +LDD R24 , Y + 16 + 2
00048e 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00048f 27ff      	CLR  R31
000490 2766      	CLR  R22
000491 2777      	CLR  R23
000492 940e 08eb 	CALL __DIVD21U
000494 940e 06be 	CALL SUBOPT_0x1E
                +
000496 89e8     +LDD R30 , Y + 16
000497 89f9     +LDD R31 , Y + 16 + 1
000498 896a     +LDD R22 , Y + 16 + 2
000499 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00049a 940e 095c 	CALL __CPD10
00049c f009      	BREQ _0x20200A7
00049d cfaf      	RJMP _0x20200A6
                 _0x20200A7:
                 _0x20200A4:
00049e ff00      	SBRS R16,0
00049f c008      	RJMP _0x20200BA
                 _0x20200BB:
0004a0 3050      	CPI  R21,0
0004a1 f031      	BREQ _0x20200BD
0004a2 5051      	SUBI R21,LOW(1)
0004a3 e2e0      	LDI  R30,LOW(32)
0004a4 93ea      	ST   -Y,R30
0004a5 940e 0698 	CALL SUBOPT_0x17
0004a7 cff8      	RJMP _0x20200BB
                 _0x20200BD:
                 _0x20200BA:
                 _0x20200BE:
                 _0x202005A:
                 _0x202011A:
0004a8 e010      	LDI  R17,LOW(0)
                 _0x202003B:
0004a9 ce0c      	RJMP _0x2020036
                 _0x2020038:
0004aa 81ae      	LDD  R26,Y+6
0004ab 81bf      	LDD  R27,Y+6+1
0004ac 940e 092c 	CALL __GETW1P
0004ae 940e 0967 	CALL __LOADLOCR6
0004b0 96ef      	ADIW R28,63
0004b1 966f      	ADIW R28,31
0004b2 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004b3 92ff      	PUSH R15
0004b4 2ef8      	MOV  R15,R24
0004b5 9726      	SBIW R28,6
0004b6 940e 0962 	CALL __SAVELOCR4
0004b8 940e 06de 	CALL SUBOPT_0x21
0004ba 9730      	SBIW R30,0
0004bb f419      	BRNE _0x20200BF
0004bc efef      	LDI  R30,LOW(65535)
0004bd efff      	LDI  R31,HIGH(65535)
0004be c023      	RJMP _0x20C0004
                 _0x20200BF:
0004bf 01de      	MOVW R26,R28
0004c0 9616      	ADIW R26,6
0004c1 940e 08c1 	CALL __ADDW2R15
0004c3 018d      	MOVW R16,R26
0004c4 940e 06de 	CALL SUBOPT_0x21
0004c6 83ee      	STD  Y+6,R30
0004c7 83ff      	STD  Y+6+1,R31
0004c8 e0e0      	LDI  R30,LOW(0)
0004c9 87e8      	STD  Y+8,R30
0004ca 87e9      	STD  Y+8+1,R30
0004cb 01de      	MOVW R26,R28
0004cc 961a      	ADIW R26,10
0004cd 940e 08c1 	CALL __ADDW2R15
0004cf 940e 092c 	CALL __GETW1P
0004d1 93fa      	ST   -Y,R31
0004d2 93ea      	ST   -Y,R30
0004d3 931a      	ST   -Y,R17
0004d4 930a      	ST   -Y,R16
0004d5 e8ed      	LDI  R30,LOW(_put_buff_G101)
0004d6 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0004d7 93fa      	ST   -Y,R31
0004d8 93ea      	ST   -Y,R30
0004d9 01de      	MOVW R26,R28
0004da 961a      	ADIW R26,10
0004db ddbd      	RCALL __print_G101
0004dc 019f      	MOVW R18,R30
0004dd 81ae      	LDD  R26,Y+6
0004de 81bf      	LDD  R27,Y+6+1
0004df e0e0      	LDI  R30,LOW(0)
0004e0 93ec      	ST   X,R30
0004e1 01f9      	MOVW R30,R18
                 _0x20C0004:
0004e2 940e 0969 	CALL __LOADLOCR4
0004e4 962a      	ADIW R28,10
0004e5 90ff      	POP  R15
0004e6 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0004e7 93ba      	ST   -Y,R27
0004e8 93aa      	ST   -Y,R26
0004e9 91e9          ld   r30,y+
0004ea 91f9          ld   r31,y+
0004eb 91a9          ld   r26,y+
0004ec 91b9          ld   r27,y+
0004ed 01cd          movw r24,r26
                 strcpyf0:
0004ee 9005      	lpm  r0,z+
0004ef 920d          st   x+,r0
0004f0 2000          tst  r0
0004f1 f7e1          brne strcpyf0
0004f2 01fc          movw r30,r24
0004f3 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0004f4 93ba      	ST   -Y,R27
0004f5 93aa      	ST   -Y,R26
0004f6 91a9          ld   r26,y+
0004f7 91b9          ld   r27,y+
0004f8 27ee          clr  r30
0004f9 27ff          clr  r31
                 strlen0:
0004fa 916d          ld   r22,x+
0004fb 2366          tst  r22
0004fc f011          breq strlen1
0004fd 9631          adiw r30,1
0004fe cffb          rjmp strlen0
                 strlen1:
0004ff 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000500 93ba      	ST   -Y,R27
000501 93aa      	ST   -Y,R26
000502 27aa          clr  r26
000503 27bb          clr  r27
000504 91e9          ld   r30,y+
000505 91f9          ld   r31,y+
                 strlenf0:
000506 9005      	lpm  r0,z+
000507 2000          tst  r0
000508 f011          breq strlenf1
000509 9611          adiw r26,1
00050a cffb          rjmp strlenf0
                 strlenf1:
00050b 01fd          movw r30,r26
00050c 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00050d 940e 094a 	CALL __PUTPARD2
00050f 817b         ldd  r23,y+3
000510 816a         ldd  r22,y+2
000511 81f9         ldd  r31,y+1
000512 81e8         ld   r30,y
000513 fb77         bst  r23,7
000514 0f77         lsl  r23
000515 fd67         sbrc r22,7
000516 6071         sbr  r23,1
000517 2f97         mov  r25,r23
000518 579e         subi r25,0x7e
000519 f081         breq __ftrunc0
00051a f078         brcs __ftrunc0
00051b 3198         cpi  r25,24
00051c f490         brsh __ftrunc1
00051d 27aa         clr  r26
00051e 27bb         clr  r27
00051f 2788         clr  r24
                 __ftrunc2:
000520 9408         sec
000521 9587         ror  r24
000522 95b7         ror  r27
000523 95a7         ror  r26
000524 959a         dec  r25
000525 f7d1         brne __ftrunc2
000526 23ea         and  r30,r26
000527 23fb         and  r31,r27
000528 2368         and  r22,r24
000529 c005         rjmp __ftrunc1
                 __ftrunc0:
00052a 94e8         clt
00052b 2777         clr  r23
00052c 27ee         clr  r30
00052d 27ff         clr  r31
00052e 2766         clr  r22
                 __ftrunc1:
00052f 776f         cbr  r22,0x80
000530 9576         lsr  r23
000531 f408         brcc __ftrunc3
000532 6860         sbr  r22,0x80
                 __ftrunc3:
000533 f977         bld  r23,7
000534 91a9         ld   r26,y+
000535 91b9         ld   r27,y+
000536 9189         ld   r24,y+
000537 9199         ld   r25,y+
000538 17ea         cp   r30,r26
000539 07fb         cpc  r31,r27
00053a 0768         cpc  r22,r24
00053b 0779         cpc  r23,r25
00053c fb97         bst  r25,7
00053d 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00053e 940e 094a 	CALL __PUTPARD2
000540 940e 093b 	CALL __GETD2S0
000542 940e 050d 	CALL _ftrunc
000544 940e 0940 	CALL __PUTD1S0
000546 f419          brne __floor1
                 __floor0:
000547 940e 0936 	CALL __GETD1S0
000549 c009      	RJMP _0x20C0003
                 __floor1:
00054a f7e6          brtc __floor0
00054b 940e 0936 	CALL __GETD1S0
                +
00054d e0a0     +LDI R26 , LOW ( 0x3F800000 )
00054e e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00054f e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000550 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000551 940e 07b7 	CALL __SUBF12
                 _0x20C0003:
000553 9624      	ADIW R28,4
000554 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000555 d0ca      	RCALL SUBOPT_0x7
000556 e0e0      	LDI  R30,LOW(0)
000557 83ea      	STD  Y+2,R30
000558 e3ef      	LDI  R30,LOW(63)
000559 83eb      	STD  Y+3,R30
00055a 931a      	ST   -Y,R17
00055b 930a      	ST   -Y,R16
00055c 85eb      	LDD  R30,Y+11
00055d 85fc      	LDD  R31,Y+11+1
00055e 3fef      	CPI  R30,LOW(0xFFFF)
00055f efaf      	LDI  R26,HIGH(0xFFFF)
000560 07fa      	CPC  R31,R26
000561 f431      	BRNE _0x20A000D
000562 d182      	RCALL SUBOPT_0x22
                +
000563 e9a8     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000564 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000565 940e 04e7 	CALL _strcpyf
000567 c08a      	RJMP _0x20C0002
                 _0x20A000D:
000568 3fef      	CPI  R30,LOW(0x7FFF)
000569 e7af      	LDI  R26,HIGH(0x7FFF)
00056a 07fa      	CPC  R31,R26
00056b f431      	BRNE _0x20A000C
00056c d178      	RCALL SUBOPT_0x22
                +
00056d e9a9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
00056e e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
00056f 940e 04e7 	CALL _strcpyf
000571 c080      	RJMP _0x20C0002
                 _0x20A000C:
000572 85ac      	LDD  R26,Y+12
000573 23aa      	TST  R26
000574 f452      	BRPL _0x20A000F
                +
000575 85e9     +LDD R30 , Y + 9
000576 85fa     +LDD R31 , Y + 9 + 1
000577 856b     +LDD R22 , Y + 9 + 2
000578 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000579 940e 0718 	CALL __ANEGF1
00057b d16e      	RCALL SUBOPT_0x23
00057c d172      	RCALL SUBOPT_0x24
00057d e2ed      	LDI  R30,LOW(45)
00057e 93ec      	ST   X,R30
                 _0x20A000F:
00057f 85a8      	LDD  R26,Y+8
000580 30a7      	CPI  R26,LOW(0x7)
000581 f010      	BRLO _0x20A0010
000582 e0e6      	LDI  R30,LOW(6)
000583 87e8      	STD  Y+8,R30
                 _0x20A0010:
000584 8518      	LDD  R17,Y+8
                 _0x20A0011:
000585 2fe1      	MOV  R30,R17
000586 5011      	SUBI R17,1
000587 30e0      	CPI  R30,0
000588 f021      	BREQ _0x20A0013
000589 d16c      	RCALL SUBOPT_0x25
00058a d0da      	RCALL SUBOPT_0xF
00058b d16f      	RCALL SUBOPT_0x26
00058c cff8      	RJMP _0x20A0011
                 _0x20A0013:
00058d d172      	RCALL SUBOPT_0x27
00058e 940e 07be 	CALL __ADDF12
000590 d159      	RCALL SUBOPT_0x23
000591 e010      	LDI  R17,LOW(0)
                +
000592 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000593 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000594 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000595 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000596 d164      	RCALL SUBOPT_0x26
                 _0x20A0014:
000597 d168      	RCALL SUBOPT_0x27
000598 940e 08a1 	CALL __CMPF12
00059a f068      	BRLO _0x20A0016
00059b d15a      	RCALL SUBOPT_0x25
00059c d0b5      	RCALL SUBOPT_0xC
00059d d15d      	RCALL SUBOPT_0x26
00059e 5f1f      	SUBI R17,-LOW(1)
00059f 3217      	CPI  R17,39
0005a0 f030      	BRLO _0x20A0017
0005a1 d143      	RCALL SUBOPT_0x22
                +
0005a2 e9ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0005a3 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0005a4 940e 04e7 	CALL _strcpyf
0005a6 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0005a7 cfef      	RJMP _0x20A0014
                 _0x20A0016:
0005a8 3010      	CPI  R17,0
0005a9 f421      	BRNE _0x20A0018
0005aa d144      	RCALL SUBOPT_0x24
0005ab e3e0      	LDI  R30,LOW(48)
0005ac 93ec      	ST   X,R30
0005ad c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0005ae 2fe1      	MOV  R30,R17
0005af 5011      	SUBI R17,1
0005b0 30e0      	CPI  R30,0
0005b1 f0e1      	BREQ _0x20A001C
0005b2 d143      	RCALL SUBOPT_0x25
0005b3 d0b1      	RCALL SUBOPT_0xF
0005b4 d0a9      	RCALL SUBOPT_0xE
0005b5 01df      	MOVW R26,R30
0005b6 01cb      	MOVW R24,R22
0005b7 940e 053e 	CALL _floor
0005b9 d141      	RCALL SUBOPT_0x26
0005ba d145      	RCALL SUBOPT_0x27
0005bb 940e 085c 	CALL __DIVF21
0005bd 940e 074b 	CALL __CFD1U
0005bf 2f0e      	MOV  R16,R30
0005c0 d12e      	RCALL SUBOPT_0x24
0005c1 d0b1      	RCALL SUBOPT_0x11
0005c2 e0f0      	LDI  R31,0
0005c3 d132      	RCALL SUBOPT_0x25
0005c4 940e 08d3 	CALL __CWD1
0005c6 940e 0784 	CALL __CDF1
0005c8 940e 080e 	CALL __MULF12
0005ca d13e      	RCALL SUBOPT_0x28
0005cb d0ac      	RCALL SUBOPT_0x12
0005cc d11d      	RCALL SUBOPT_0x23
0005cd cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0005ce 85e8      	LDD  R30,Y+8
0005cf 30e0      	CPI  R30,0
0005d0 f0e9      	BREQ _0x20C0001
0005d1 d11d      	RCALL SUBOPT_0x24
0005d2 e2ee      	LDI  R30,LOW(46)
0005d3 93ec      	ST   X,R30
                 _0x20A001E:
0005d4 85e8      	LDD  R30,Y+8
0005d5 50e1      	SUBI R30,LOW(1)
0005d6 87e8      	STD  Y+8,R30
0005d7 5fef      	SUBI R30,-LOW(1)
0005d8 f0a9      	BREQ _0x20A0020
0005d9 d12f      	RCALL SUBOPT_0x28
0005da d077      	RCALL SUBOPT_0xC
0005db d10e      	RCALL SUBOPT_0x23
                +
0005dc 85e9     +LDD R30 , Y + 9
0005dd 85fa     +LDD R31 , Y + 9 + 1
0005de 856b     +LDD R22 , Y + 9 + 2
0005df 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005e0 940e 074b 	CALL __CFD1U
0005e2 2f0e      	MOV  R16,R30
0005e3 d10b      	RCALL SUBOPT_0x24
0005e4 d08e      	RCALL SUBOPT_0x11
0005e5 e0f0      	LDI  R31,0
0005e6 d122      	RCALL SUBOPT_0x28
0005e7 940e 08d3 	CALL __CWD1
0005e9 940e 0784 	CALL __CDF1
0005eb d08c      	RCALL SUBOPT_0x12
0005ec d0fd      	RCALL SUBOPT_0x23
0005ed cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
0005ee 81ae      	LDD  R26,Y+6
0005ef 81bf      	LDD  R27,Y+6+1
0005f0 e0e0      	LDI  R30,LOW(0)
0005f1 93ec      	ST   X,R30
                 _0x20C0002:
0005f2 8119      	LDD  R17,Y+1
0005f3 8108      	LDD  R16,Y+0
0005f4 962d      	ADIW R28,13
0005f5 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _lcd:
000307           	.BYTE 0x10
                 _temp_S0010001000:
000317           	.BYTE 0x1
                 __base_y_G100:
000318           	.BYTE 0x4
                 __seed_G105:
00031c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0005f6 e0e7      	LDI  R30,LOW(_lcd)
0005f7 e0f3      	LDI  R31,HIGH(_lcd)
0005f8 93fa      	ST   -Y,R31
0005f9 93ea      	ST   -Y,R30
0005fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0005fb 2766      	CLR  R22
0005fc 2777      	CLR  R23
0005fd 940e 0945 	CALL __PUTPARD1
0005ff e084      	LDI  R24,4
000600 940e 04b3 	CALL _sprintf
000602 9628      	ADIW R28,8
000603 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000604 e0a7      	LDI  R26,LOW(_lcd)
000605 e0b3      	LDI  R27,HIGH(_lcd)
000606 940c 014e 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000608 eea8      	LDI  R26,LOW(1000)
000609 e0b3      	LDI  R27,HIGH(1000)
00060a 940c 070e 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00060c 940e 0114 	CALL __lcd_write_data
00060e e0a3      	LDI  R26,LOW(3)
00060f e0b0      	LDI  R27,0
000610 940c 070e 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
000612 e3a0      	LDI  R26,LOW(48)
000613 940e 0100 	CALL __lcd_write_nibble_G100
                +
000615 ec88     +LDI R24 , LOW ( 200 )
000616 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000617 9701     +SBIW R24 , 1
000618 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000619 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00061a 91ed      	LD   R30,X+
00061b 91fd      	LD   R31,X+
00061c 9631      	ADIW R30,1
00061d 93fe      	ST   -X,R31
00061e 93ee      	ST   -X,R30
00061f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000620 93ba      	ST   -Y,R27
000621 93aa      	ST   -Y,R26
000622 9724      	SBIW R28,4
000623 e0e0      	LDI  R30,LOW(0)
000624 83e8      	ST   Y,R30
000625 83e9      	STD  Y+1,R30
000626 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x8:
                +
000627 81ac     +LDD R26 , Y + 4
000628 81bd     +LDD R27 , Y + 4 + 1
000629 818e     +LDD R24 , Y + 4 + 2
00062a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00062b e0e0     +LDI R30 , LOW ( 0x41200000 )
00062c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00062d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00062e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00062f 940e 080e 	CALL __MULF12
                +
000631 83ec     +STD Y + 4 , R30
000632 83fd     +STD Y + 4 + 1 , R31
000633 836e     +STD Y + 4 + 2 , R22
000634 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000635 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x9:
                +
000636 81ec     +LDD R30 , Y + 4
000637 81fd     +LDD R31 , Y + 4 + 1
000638 816e     +LDD R22 , Y + 4 + 2
000639 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00063a 85ac     +LDD R26 , Y + 12
00063b 85bd     +LDD R27 , Y + 12 + 1
00063c 858e     +LDD R24 , Y + 12 + 2
00063d 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00063e 940e 08a1 	CALL __CMPF12
000640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
000641 85ac     +LDD R26 , Y + 12
000642 85bd     +LDD R27 , Y + 12 + 1
000643 858e     +LDD R24 , Y + 12 + 2
000644 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000645 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
                +
000646 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000647 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000648 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000649 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00064a 940e 080e 	CALL __MULF12
                +
00064c 87ec     +STD Y + 12 , R30
00064d 87fd     +STD Y + 12 + 1 , R31
00064e 876e     +STD Y + 12 + 2 , R22
00064f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000650 5f3f      	SUBI R19,-LOW(1)
000651 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
000652 e0e0     +LDI R30 , LOW ( 0x41200000 )
000653 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000654 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000655 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000656 940e 080e 	CALL __MULF12
000658 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
000659 87ec     +STD Y + 12 , R30
00065a 87fd     +STD Y + 12 + 1 , R31
00065b 876e     +STD Y + 12 + 2 , R22
00065c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00065d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
00065e e0a0     +LDI R26 , LOW ( 0x3F000000 )
00065f e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000660 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000661 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000662 940e 07be 	CALL __ADDF12
000664 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
                +
000665 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000666 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000667 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000668 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000669 940e 080e 	CALL __MULF12
00066b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
00066c 85a8      	LDD  R26,Y+8
00066d 85b9      	LDD  R27,Y+8+1
00066e 9611      	ADIW R26,1
00066f 87a8      	STD  Y+8,R26
000670 87b9      	STD  Y+8+1,R27
000671 9711      	SBIW R26,1
000672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000673 2fe0      	MOV  R30,R16
000674 5de0      	SUBI R30,-LOW(48)
000675 93ec      	ST   X,R30
000676 2fe0      	MOV  R30,R16
000677 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000678 940e 094f 	CALL __SWAPD12
00067a 940e 07b7 	CALL __SUBF12
00067c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x13:
00067d 85e8      	LDD  R30,Y+8
00067e 85f9      	LDD  R31,Y+8+1
00067f 9631      	ADIW R30,1
000680 87e8      	STD  Y+8,R30
000681 87f9      	STD  Y+8+1,R31
000682 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14:
000683 932a      	ST   -Y,R18
000684 81af      	LDD  R26,Y+7
000685 85b8      	LDD  R27,Y+7+1
000686 85e9      	LDD  R30,Y+9
000687 85fa      	LDD  R31,Y+9+1
000688 9509      	ICALL
000689 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x15:
                +
00068a 01fe     +MOVW R30 , R28
00068b 5ae6     +SUBI R30 , LOW ( - 90 )
00068c 4fff     +SBCI R31 , HIGH ( - 90 )
00068d 9001     +LD R0 , Z +
00068e 81f0     +LD R31 , Z
00068f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16:
000691 9734      	SBIW R30,4
                +
000692 01de     +MOVW R26 , R28
000693 5aa6     +SUBI R26 , LOW ( - 90 )
000694 4fbf     +SBCI R27 , HIGH ( - 90 )
000695 93ed     +ST X + , R30
000696 93fc     +ST X , R31
                 	__PUTW1SX 90
000697 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
000698 81af      	LDD  R26,Y+7
000699 85b8      	LDD  R27,Y+7+1
00069a 85e9      	LDD  R30,Y+9
00069b 85fa      	LDD  R31,Y+9+1
00069c 9509      	ICALL
00069d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18:
                +
00069e 01de     +MOVW R26 , R28
00069f 5aa6     +SUBI R26 , LOW ( - 90 )
0006a0 4fbf     +SBCI R27 , HIGH ( - 90 )
0006a1 900d     +LD R0 , X +
0006a2 91bc     +LD R27 , X
0006a3 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0006a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
0006a5 87ea     +STD Y + 10 , R30
0006a6 87fb     +STD Y + 10 + 1 , R31
0006a7 876c     +STD Y + 10 + 2 , R22
0006a8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
0006aa dfdf      	RCALL SUBOPT_0x15
0006ab cfe5      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
0006ac 85ea     +LDD R30 , Y + 10
0006ad 85fb     +LDD R31 , Y + 10 + 1
0006ae 856c     +LDD R22 , Y + 10 + 2
0006af 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0006b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
0006b1 87ee      	STD  Y+14,R30
0006b2 87ff      	STD  Y+14+1,R31
0006b3 85ae      	LDD  R26,Y+14
0006b4 85bf      	LDD  R27,Y+14+1
0006b5 940e 04f4 	CALL _strlen
0006b7 2f1e      	MOV  R17,R30
0006b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
0006b9 dfe4      	RCALL SUBOPT_0x18
0006ba 9614      	ADIW R26,4
0006bb 940e 092c 	CALL __GETW1P
0006bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
0006be 8be8     +STD Y + 16 , R30
0006bf 8bf9     +STD Y + 16 + 1 , R31
0006c0 8b6a     +STD Y + 16 + 2 , R22
0006c1 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0006c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1F:
0006c3 7f0b      	ANDI R16,LOW(251)
0006c4 89ed      	LDD  R30,Y+21
0006c5 93ea      	ST   -Y,R30
                +
0006c6 01de     +MOVW R26 , R28
0006c7 5aa9     +SUBI R26 , LOW ( - 87 )
0006c8 4fbf     +SBCI R27 , HIGH ( - 87 )
0006c9 900d     +LD R0 , X +
0006ca 91bc     +LD R27 , X
0006cb 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0006cc 01fe     +MOVW R30 , R28
0006cd 5ae7     +SUBI R30 , LOW ( - 89 )
0006ce 4fff     +SBCI R31 , HIGH ( - 89 )
0006cf 9001     +LD R0 , Z +
0006d0 81f0     +LD R31 , Z
0006d1 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0006d2 9509      	ICALL
0006d3 3050      	CPI  R21,0
0006d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
0006d5 89e8     +LDD R30 , Y + 16
0006d6 89f9     +LDD R31 , Y + 16 + 1
0006d7 896a     +LDD R22 , Y + 16 + 2
0006d8 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0006d9 85aa     +LDD R26 , Y + 10
0006da 85bb     +LDD R27 , Y + 10 + 1
0006db 858c     +LDD R24 , Y + 10 + 2
0006dc 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0006dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0006de 01de      	MOVW R26,R28
0006df 961c      	ADIW R26,12
0006e0 940e 08c1 	CALL __ADDW2R15
0006e2 940e 092c 	CALL __GETW1P
0006e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
0006e5 81ee      	LDD  R30,Y+6
0006e6 81ff      	LDD  R31,Y+6+1
0006e7 93fa      	ST   -Y,R31
0006e8 93ea      	ST   -Y,R30
0006e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
0006ea 87e9     +STD Y + 9 , R30
0006eb 87fa     +STD Y + 9 + 1 , R31
0006ec 876b     +STD Y + 9 + 2 , R22
0006ed 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0006ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
0006ef 81ae      	LDD  R26,Y+6
0006f0 81bf      	LDD  R27,Y+6+1
0006f1 9611      	ADIW R26,1
0006f2 83ae      	STD  Y+6,R26
0006f3 83bf      	STD  Y+6+1,R27
0006f4 9711      	SBIW R26,1
0006f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
                +
0006f6 81aa     +LDD R26 , Y + 2
0006f7 81bb     +LDD R27 , Y + 2 + 1
0006f8 818c     +LDD R24 , Y + 2 + 2
0006f9 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0006fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
0006fb 83ea     +STD Y + 2 , R30
0006fc 83fb     +STD Y + 2 + 1 , R31
0006fd 836c     +STD Y + 2 + 2 , R22
0006fe 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0006ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
000700 81ea     +LDD R30 , Y + 2
000701 81fb     +LDD R31 , Y + 2 + 1
000702 816c     +LDD R22 , Y + 2 + 2
000703 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000704 85a9     +LDD R26 , Y + 9
000705 85ba     +LDD R27 , Y + 9 + 1
000706 858b     +LDD R24 , Y + 9 + 2
000707 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000708 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
                +
000709 85a9     +LDD R26 , Y + 9
00070a 85ba     +LDD R27 , Y + 9 + 1
00070b 858b     +LDD R24 , Y + 9 + 2
00070c 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00070d 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00070e 9610      	adiw r26,0
00070f f039      	breq __delay_ms1
                 __delay_ms0:
000710 95a8      	wdr
                +
000711 ed80     +LDI R24 , LOW ( 0x7D0 )
000712 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000713 9701     +SBIW R24 , 1
000714 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000715 9711      	sbiw r26,1
000716 f7c9      	brne __delay_ms0
                 __delay_ms1:
000717 9508      	ret
                 
                 __ANEGF1:
000718 9730      	SBIW R30,0
000719 4060      	SBCI R22,0
00071a 4070      	SBCI R23,0
00071b f009      	BREQ __ANEGF10
00071c 5870      	SUBI R23,0x80
                 __ANEGF10:
00071d 9508      	RET
                 
                 __ROUND_REPACK:
00071e 2355      	TST  R21
00071f f442      	BRPL __REPACK
000720 3850      	CPI  R21,0x80
000721 f411      	BRNE __ROUND_REPACK0
000722 ffe0      	SBRS R30,0
000723 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000724 9631      	ADIW R30,1
000725 1f69      	ADC  R22,R25
000726 1f79      	ADC  R23,R25
000727 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000728 e850      	LDI  R21,0x80
000729 2757      	EOR  R21,R23
00072a f411      	BRNE __REPACK0
00072b 935f      	PUSH R21
00072c c0cf      	RJMP __ZERORES
                 __REPACK0:
00072d 3f5f      	CPI  R21,0xFF
00072e f031      	BREQ __REPACK1
00072f 0f66      	LSL  R22
000730 0c00      	LSL  R0
000731 9557      	ROR  R21
000732 9567      	ROR  R22
000733 2f75      	MOV  R23,R21
000734 9508      	RET
                 __REPACK1:
000735 935f      	PUSH R21
000736 2000      	TST  R0
000737 f00a      	BRMI __REPACK2
000738 c0cf      	RJMP __MAXRES
                 __REPACK2:
000739 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00073a e850      	LDI  R21,0x80
00073b 2e19      	MOV  R1,R25
00073c 2215      	AND  R1,R21
00073d 0f88      	LSL  R24
00073e 1f99      	ROL  R25
00073f 2795      	EOR  R25,R21
000740 0f55      	LSL  R21
000741 9587      	ROR  R24
                 
                 __UNPACK1:
000742 e850      	LDI  R21,0x80
000743 2e07      	MOV  R0,R23
000744 2205      	AND  R0,R21
000745 0f66      	LSL  R22
000746 1f77      	ROL  R23
000747 2775      	EOR  R23,R21
000748 0f55      	LSL  R21
000749 9567      	ROR  R22
00074a 9508      	RET
                 
                 __CFD1U:
00074b 9468      	SET
00074c c001      	RJMP __CFD1U0
                 __CFD1:
00074d 94e8      	CLT
                 __CFD1U0:
00074e 935f      	PUSH R21
00074f dff2      	RCALL __UNPACK1
000750 3870      	CPI  R23,0x80
000751 f018      	BRLO __CFD10
000752 3f7f      	CPI  R23,0xFF
000753 f408      	BRCC __CFD10
000754 c0a7      	RJMP __ZERORES
                 __CFD10:
000755 e156      	LDI  R21,22
000756 1b57      	SUB  R21,R23
000757 f4aa      	BRPL __CFD11
000758 9551      	NEG  R21
000759 3058      	CPI  R21,8
00075a f40e      	BRTC __CFD19
00075b 3059      	CPI  R21,9
                 __CFD19:
00075c f030      	BRLO __CFD17
00075d efef      	SER  R30
00075e efff      	SER  R31
00075f ef6f      	SER  R22
000760 e77f      	LDI  R23,0x7F
000761 f977      	BLD  R23,7
000762 c01a      	RJMP __CFD15
                 __CFD17:
000763 2777      	CLR  R23
000764 2355      	TST  R21
000765 f0b9      	BREQ __CFD15
                 __CFD18:
000766 0fee      	LSL  R30
000767 1fff      	ROL  R31
000768 1f66      	ROL  R22
000769 1f77      	ROL  R23
00076a 955a      	DEC  R21
00076b f7d1      	BRNE __CFD18
00076c c010      	RJMP __CFD15
                 __CFD11:
00076d 2777      	CLR  R23
                 __CFD12:
00076e 3058      	CPI  R21,8
00076f f028      	BRLO __CFD13
000770 2fef      	MOV  R30,R31
000771 2ff6      	MOV  R31,R22
000772 2f67      	MOV  R22,R23
000773 5058      	SUBI R21,8
000774 cff9      	RJMP __CFD12
                 __CFD13:
000775 2355      	TST  R21
000776 f031      	BREQ __CFD15
                 __CFD14:
000777 9576      	LSR  R23
000778 9567      	ROR  R22
000779 95f7      	ROR  R31
00077a 95e7      	ROR  R30
00077b 955a      	DEC  R21
00077c f7d1      	BRNE __CFD14
                 __CFD15:
00077d 2000      	TST  R0
00077e f40a      	BRPL __CFD16
00077f d145      	RCALL __ANEGD1
                 __CFD16:
000780 915f      	POP  R21
000781 9508      	RET
                 
                 __CDF1U:
000782 9468      	SET
000783 c001      	RJMP __CDF1U0
                 __CDF1:
000784 94e8      	CLT
                 __CDF1U0:
000785 9730      	SBIW R30,0
000786 4060      	SBCI R22,0
000787 4070      	SBCI R23,0
000788 f0b1      	BREQ __CDF10
000789 2400      	CLR  R0
00078a f026      	BRTS __CDF11
00078b 2377      	TST  R23
00078c f412      	BRPL __CDF11
00078d 9400      	COM  R0
00078e d136      	RCALL __ANEGD1
                 __CDF11:
00078f 2e17      	MOV  R1,R23
000790 e17e      	LDI  R23,30
000791 2011      	TST  R1
                 __CDF12:
000792 f032      	BRMI __CDF13
000793 957a      	DEC  R23
000794 0fee      	LSL  R30
000795 1fff      	ROL  R31
000796 1f66      	ROL  R22
000797 1c11      	ROL  R1
000798 cff9      	RJMP __CDF12
                 __CDF13:
000799 2fef      	MOV  R30,R31
00079a 2ff6      	MOV  R31,R22
00079b 2d61      	MOV  R22,R1
00079c 935f      	PUSH R21
00079d df8a      	RCALL __REPACK
00079e 915f      	POP  R21
                 __CDF10:
00079f 9508      	RET
                 
                 __SWAPACC:
0007a0 934f      	PUSH R20
0007a1 01af      	MOVW R20,R30
0007a2 01fd      	MOVW R30,R26
0007a3 01da      	MOVW R26,R20
0007a4 01ab      	MOVW R20,R22
0007a5 01bc      	MOVW R22,R24
0007a6 01ca      	MOVW R24,R20
0007a7 2d40      	MOV  R20,R0
0007a8 2c01      	MOV  R0,R1
0007a9 2e14      	MOV  R1,R20
0007aa 914f      	POP  R20
0007ab 9508      	RET
                 
                 __UADD12:
0007ac 0fea      	ADD  R30,R26
0007ad 1ffb      	ADC  R31,R27
0007ae 1f68      	ADC  R22,R24
0007af 9508      	RET
                 
                 __NEGMAN1:
0007b0 95e0      	COM  R30
0007b1 95f0      	COM  R31
0007b2 9560      	COM  R22
0007b3 5fef      	SUBI R30,-1
0007b4 4fff      	SBCI R31,-1
0007b5 4f6f      	SBCI R22,-1
0007b6 9508      	RET
                 
                 __SUBF12:
0007b7 935f      	PUSH R21
0007b8 df81      	RCALL __UNPACK
0007b9 3890      	CPI  R25,0x80
0007ba f171      	BREQ __ADDF129
0007bb e850      	LDI  R21,0x80
0007bc 2615      	EOR  R1,R21
                 
0007bd c004      	RJMP __ADDF120
                 
                 __ADDF12:
0007be 935f      	PUSH R21
0007bf df7a      	RCALL __UNPACK
0007c0 3890      	CPI  R25,0x80
0007c1 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0007c2 3870      	CPI  R23,0x80
0007c3 f121      	BREQ __ADDF128
                 __ADDF121:
0007c4 2f57      	MOV  R21,R23
0007c5 1b59      	SUB  R21,R25
0007c6 f12b      	BRVS __ADDF1211
0007c7 f412      	BRPL __ADDF122
0007c8 dfd7      	RCALL __SWAPACC
0007c9 cffa      	RJMP __ADDF121
                 __ADDF122:
0007ca 3158      	CPI  R21,24
0007cb f018      	BRLO __ADDF123
0007cc 27aa      	CLR  R26
0007cd 27bb      	CLR  R27
0007ce 2788      	CLR  R24
                 __ADDF123:
0007cf 3058      	CPI  R21,8
0007d0 f028      	BRLO __ADDF124
0007d1 2fab      	MOV  R26,R27
0007d2 2fb8      	MOV  R27,R24
0007d3 2788      	CLR  R24
0007d4 5058      	SUBI R21,8
0007d5 cff9      	RJMP __ADDF123
                 __ADDF124:
0007d6 2355      	TST  R21
0007d7 f029      	BREQ __ADDF126
                 __ADDF125:
0007d8 9586      	LSR  R24
0007d9 95b7      	ROR  R27
0007da 95a7      	ROR  R26
0007db 955a      	DEC  R21
0007dc f7d9      	BRNE __ADDF125
                 __ADDF126:
0007dd 2d50      	MOV  R21,R0
0007de 2551      	EOR  R21,R1
0007df f072      	BRMI __ADDF127
0007e0 dfcb      	RCALL __UADD12
0007e1 f438      	BRCC __ADDF129
0007e2 9567      	ROR  R22
0007e3 95f7      	ROR  R31
0007e4 95e7      	ROR  R30
0007e5 9573      	INC  R23
0007e6 f413      	BRVC __ADDF129
0007e7 c020      	RJMP __MAXRES
                 __ADDF128:
0007e8 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0007e9 df3e      	RCALL __REPACK
0007ea 915f      	POP  R21
0007eb 9508      	RET
                 __ADDF1211:
0007ec f7d8      	BRCC __ADDF128
0007ed cffb      	RJMP __ADDF129
                 __ADDF127:
0007ee 1bea      	SUB  R30,R26
0007ef 0bfb      	SBC  R31,R27
0007f0 0b68      	SBC  R22,R24
0007f1 f051      	BREQ __ZERORES
0007f2 f410      	BRCC __ADDF1210
0007f3 9400      	COM  R0
0007f4 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0007f5 2366      	TST  R22
0007f6 f392      	BRMI __ADDF129
0007f7 0fee      	LSL  R30
0007f8 1fff      	ROL  R31
0007f9 1f66      	ROL  R22
0007fa 957a      	DEC  R23
0007fb f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0007fc 27ee      	CLR  R30
0007fd 27ff      	CLR  R31
0007fe 2766      	CLR  R22
0007ff 2777      	CLR  R23
000800 915f      	POP  R21
000801 9508      	RET
                 
                 __MINRES:
000802 efef      	SER  R30
000803 efff      	SER  R31
000804 e76f      	LDI  R22,0x7F
000805 ef7f      	SER  R23
000806 915f      	POP  R21
000807 9508      	RET
                 
                 __MAXRES:
000808 efef      	SER  R30
000809 efff      	SER  R31
00080a e76f      	LDI  R22,0x7F
00080b e77f      	LDI  R23,0x7F
00080c 915f      	POP  R21
00080d 9508      	RET
                 
                 __MULF12:
00080e 935f      	PUSH R21
00080f df2a      	RCALL __UNPACK
000810 3870      	CPI  R23,0x80
000811 f351      	BREQ __ZERORES
000812 3890      	CPI  R25,0x80
000813 f341      	BREQ __ZERORES
000814 2401      	EOR  R0,R1
000815 9408      	SEC
000816 1f79      	ADC  R23,R25
000817 f423      	BRVC __MULF124
000818 f31c      	BRLT __ZERORES
                 __MULF125:
000819 2000      	TST  R0
00081a f33a      	BRMI __MINRES
00081b cfec      	RJMP __MAXRES
                 __MULF124:
00081c 920f      	PUSH R0
00081d 931f      	PUSH R17
00081e 932f      	PUSH R18
00081f 933f      	PUSH R19
000820 934f      	PUSH R20
000821 2711      	CLR  R17
000822 2722      	CLR  R18
000823 2799      	CLR  R25
000824 9f68      	MUL  R22,R24
000825 01a0      	MOVW R20,R0
000826 9f8f      	MUL  R24,R31
000827 2d30      	MOV  R19,R0
000828 0d41      	ADD  R20,R1
000829 1f59      	ADC  R21,R25
00082a 9f6b      	MUL  R22,R27
00082b 0d30      	ADD  R19,R0
00082c 1d41      	ADC  R20,R1
00082d 1f59      	ADC  R21,R25
00082e 9f8e      	MUL  R24,R30
00082f d027      	RCALL __MULF126
000830 9fbf      	MUL  R27,R31
000831 d025      	RCALL __MULF126
000832 9f6a      	MUL  R22,R26
000833 d023      	RCALL __MULF126
000834 9fbe      	MUL  R27,R30
000835 d01d      	RCALL __MULF127
000836 9faf      	MUL  R26,R31
000837 d01b      	RCALL __MULF127
000838 9fae      	MUL  R26,R30
000839 0d11      	ADD  R17,R1
00083a 1f29      	ADC  R18,R25
00083b 1f39      	ADC  R19,R25
00083c 1f49      	ADC  R20,R25
00083d 1f59      	ADC  R21,R25
00083e 2fe3      	MOV  R30,R19
00083f 2ff4      	MOV  R31,R20
000840 2f65      	MOV  R22,R21
000841 2f52      	MOV  R21,R18
000842 914f      	POP  R20
000843 913f      	POP  R19
000844 912f      	POP  R18
000845 911f      	POP  R17
000846 900f      	POP  R0
000847 2366      	TST  R22
000848 f02a      	BRMI __MULF122
000849 0f55      	LSL  R21
00084a 1fee      	ROL  R30
00084b 1fff      	ROL  R31
00084c 1f66      	ROL  R22
00084d c002      	RJMP __MULF123
                 __MULF122:
00084e 9573      	INC  R23
00084f f24b      	BRVS __MULF125
                 __MULF123:
000850 decd      	RCALL __ROUND_REPACK
000851 915f      	POP  R21
000852 9508      	RET
                 
                 __MULF127:
000853 0d10      	ADD  R17,R0
000854 1d21      	ADC  R18,R1
000855 1f39      	ADC  R19,R25
000856 c002      	RJMP __MULF128
                 __MULF126:
000857 0d20      	ADD  R18,R0
000858 1d31      	ADC  R19,R1
                 __MULF128:
000859 1f49      	ADC  R20,R25
00085a 1f59      	ADC  R21,R25
00085b 9508      	RET
                 
                 __DIVF21:
00085c 935f      	PUSH R21
00085d dedc      	RCALL __UNPACK
00085e 3870      	CPI  R23,0x80
00085f f421      	BRNE __DIVF210
000860 2011      	TST  R1
                 __DIVF211:
000861 f40a      	BRPL __DIVF219
000862 cf9f      	RJMP __MINRES
                 __DIVF219:
000863 cfa4      	RJMP __MAXRES
                 __DIVF210:
000864 3890      	CPI  R25,0x80
000865 f409      	BRNE __DIVF218
                 __DIVF217:
000866 cf95      	RJMP __ZERORES
                 __DIVF218:
000867 2401      	EOR  R0,R1
000868 9408      	SEC
000869 0b97      	SBC  R25,R23
00086a f41b      	BRVC __DIVF216
00086b f3d4      	BRLT __DIVF217
00086c 2000      	TST  R0
00086d cff3      	RJMP __DIVF211
                 __DIVF216:
00086e 2f79      	MOV  R23,R25
00086f 931f      	PUSH R17
000870 932f      	PUSH R18
000871 933f      	PUSH R19
000872 934f      	PUSH R20
000873 2411      	CLR  R1
000874 2711      	CLR  R17
000875 2722      	CLR  R18
000876 2733      	CLR  R19
000877 2744      	CLR  R20
000878 2755      	CLR  R21
000879 e290      	LDI  R25,32
                 __DIVF212:
00087a 17ae      	CP   R26,R30
00087b 07bf      	CPC  R27,R31
00087c 0786      	CPC  R24,R22
00087d 0741      	CPC  R20,R17
00087e f030      	BRLO __DIVF213
00087f 1bae      	SUB  R26,R30
000880 0bbf      	SBC  R27,R31
000881 0b86      	SBC  R24,R22
000882 0b41      	SBC  R20,R17
000883 9408      	SEC
000884 c001      	RJMP __DIVF214
                 __DIVF213:
000885 9488      	CLC
                 __DIVF214:
000886 1f55      	ROL  R21
000887 1f22      	ROL  R18
000888 1f33      	ROL  R19
000889 1c11      	ROL  R1
00088a 1faa      	ROL  R26
00088b 1fbb      	ROL  R27
00088c 1f88      	ROL  R24
00088d 1f44      	ROL  R20
00088e 959a      	DEC  R25
00088f f751      	BRNE __DIVF212
000890 01f9      	MOVW R30,R18
000891 2d61      	MOV  R22,R1
000892 914f      	POP  R20
000893 913f      	POP  R19
000894 912f      	POP  R18
000895 911f      	POP  R17
000896 2366      	TST  R22
000897 f032      	BRMI __DIVF215
000898 0f55      	LSL  R21
000899 1fee      	ROL  R30
00089a 1fff      	ROL  R31
00089b 1f66      	ROL  R22
00089c 957a      	DEC  R23
00089d f243      	BRVS __DIVF217
                 __DIVF215:
00089e de7f      	RCALL __ROUND_REPACK
00089f 915f      	POP  R21
0008a0 9508      	RET
                 
                 __CMPF12:
0008a1 2399      	TST  R25
0008a2 f09a      	BRMI __CMPF120
0008a3 2377      	TST  R23
0008a4 f042      	BRMI __CMPF121
0008a5 1797      	CP   R25,R23
0008a6 f048      	BRLO __CMPF122
0008a7 f429      	BRNE __CMPF121
0008a8 17ae      	CP   R26,R30
0008a9 07bf      	CPC  R27,R31
0008aa 0786      	CPC  R24,R22
0008ab f020      	BRLO __CMPF122
0008ac f031      	BREQ __CMPF123
                 __CMPF121:
0008ad 9498      	CLZ
0008ae 9488      	CLC
0008af 9508      	RET
                 __CMPF122:
0008b0 9498      	CLZ
0008b1 9408      	SEC
0008b2 9508      	RET
                 __CMPF123:
0008b3 9418      	SEZ
0008b4 9488      	CLC
0008b5 9508      	RET
                 __CMPF120:
0008b6 2377      	TST  R23
0008b7 f7c2      	BRPL __CMPF122
0008b8 1797      	CP   R25,R23
0008b9 f398      	BRLO __CMPF121
0008ba f7a9      	BRNE __CMPF122
0008bb 17ea      	CP   R30,R26
0008bc 07fb      	CPC  R31,R27
0008bd 0768      	CPC  R22,R24
0008be f388      	BRLO __CMPF122
0008bf f399      	BREQ __CMPF123
0008c0 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0008c1 2400      	CLR  R0
0008c2 0daf      	ADD  R26,R15
0008c3 1db0      	ADC  R27,R0
0008c4 9508      	RET
                 
                 __ANEGD1:
0008c5 95f0      	COM  R31
0008c6 9560      	COM  R22
0008c7 9570      	COM  R23
0008c8 95e1      	NEG  R30
0008c9 4fff      	SBCI R31,-1
0008ca 4f6f      	SBCI R22,-1
0008cb 4f7f      	SBCI R23,-1
0008cc 9508      	RET
                 
                 __CBD1:
0008cd 2ffe      	MOV  R31,R30
0008ce 0fff      	ADD  R31,R31
0008cf 0bff      	SBC  R31,R31
0008d0 2f6f      	MOV  R22,R31
0008d1 2f7f      	MOV  R23,R31
0008d2 9508      	RET
                 
                 __CWD1:
0008d3 2f6f      	MOV  R22,R31
0008d4 0f66      	ADD  R22,R22
0008d5 0b66      	SBC  R22,R22
0008d6 2f76      	MOV  R23,R22
0008d7 9508      	RET
                 
                 __DIVB21U:
0008d8 2400      	CLR  R0
0008d9 e098      	LDI  R25,8
                 __DIVB21U1:
0008da 0faa      	LSL  R26
0008db 1c00      	ROL  R0
0008dc 1a0e      	SUB  R0,R30
0008dd f410      	BRCC __DIVB21U2
0008de 0e0e      	ADD  R0,R30
0008df c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0008e0 60a1      	SBR  R26,1
                 __DIVB21U3:
0008e1 959a      	DEC  R25
0008e2 f7b9      	BRNE __DIVB21U1
0008e3 2fea      	MOV  R30,R26
0008e4 2da0      	MOV  R26,R0
0008e5 9508      	RET
                 
                 __DIVB21:
0008e6 d039      	RCALL __CHKSIGNB
0008e7 dff0      	RCALL __DIVB21U
0008e8 f40e      	BRTC __DIVB211
0008e9 95e1      	NEG  R30
                 __DIVB211:
0008ea 9508      	RET
                 
                 __DIVD21U:
0008eb 933f      	PUSH R19
0008ec 934f      	PUSH R20
0008ed 935f      	PUSH R21
0008ee 2400      	CLR  R0
0008ef 2411      	CLR  R1
0008f0 2744      	CLR  R20
0008f1 2755      	CLR  R21
0008f2 e230      	LDI  R19,32
                 __DIVD21U1:
0008f3 0faa      	LSL  R26
0008f4 1fbb      	ROL  R27
0008f5 1f88      	ROL  R24
0008f6 1f99      	ROL  R25
0008f7 1c00      	ROL  R0
0008f8 1c11      	ROL  R1
0008f9 1f44      	ROL  R20
0008fa 1f55      	ROL  R21
0008fb 1a0e      	SUB  R0,R30
0008fc 0a1f      	SBC  R1,R31
0008fd 0b46      	SBC  R20,R22
0008fe 0b57      	SBC  R21,R23
0008ff f428      	BRCC __DIVD21U2
000900 0e0e      	ADD  R0,R30
000901 1e1f      	ADC  R1,R31
000902 1f46      	ADC  R20,R22
000903 1f57      	ADC  R21,R23
000904 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000905 60a1      	SBR  R26,1
                 __DIVD21U3:
000906 953a      	DEC  R19
000907 f759      	BRNE __DIVD21U1
000908 01fd      	MOVW R30,R26
000909 01bc      	MOVW R22,R24
00090a 01d0      	MOVW R26,R0
00090b 01ca      	MOVW R24,R20
00090c 915f      	POP  R21
00090d 914f      	POP  R20
00090e 913f      	POP  R19
00090f 9508      	RET
                 
                 __MODB21:
000910 94e8      	CLT
000911 ffa7      	SBRS R26,7
000912 c002      	RJMP __MODB211
000913 95a1      	NEG  R26
000914 9468      	SET
                 __MODB211:
000915 fde7      	SBRC R30,7
000916 95e1      	NEG  R30
000917 dfc0      	RCALL __DIVB21U
000918 2fea      	MOV  R30,R26
000919 f40e      	BRTC __MODB212
00091a 95e1      	NEG  R30
                 __MODB212:
00091b 9508      	RET
                 
                 __MODD21U:
00091c dfce      	RCALL __DIVD21U
00091d 01fd      	MOVW R30,R26
00091e 01bc      	MOVW R22,R24
00091f 9508      	RET
                 
                 __CHKSIGNB:
000920 94e8      	CLT
000921 ffe7      	SBRS R30,7
000922 c002      	RJMP __CHKSB1
000923 95e1      	NEG  R30
000924 9468      	SET
                 __CHKSB1:
000925 ffa7      	SBRS R26,7
000926 c004      	RJMP __CHKSB2
000927 95a1      	NEG  R26
000928 f800      	BLD  R0,0
000929 9403      	INC  R0
00092a fa00      	BST  R0,0
                 __CHKSB2:
00092b 9508      	RET
                 
                 __GETW1P:
00092c 91ed      	LD   R30,X+
00092d 91fc      	LD   R31,X
00092e 9711      	SBIW R26,1
00092f 9508      	RET
                 
                 __GETD1P:
000930 91ed      	LD   R30,X+
000931 91fd      	LD   R31,X+
000932 916d      	LD   R22,X+
000933 917c      	LD   R23,X
000934 9713      	SBIW R26,3
000935 9508      	RET
                 
                 __GETD1S0:
000936 81e8      	LD   R30,Y
000937 81f9      	LDD  R31,Y+1
000938 816a      	LDD  R22,Y+2
000939 817b      	LDD  R23,Y+3
00093a 9508      	RET
                 
                 __GETD2S0:
00093b 81a8      	LD   R26,Y
00093c 81b9      	LDD  R27,Y+1
00093d 818a      	LDD  R24,Y+2
00093e 819b      	LDD  R25,Y+3
00093f 9508      	RET
                 
                 __PUTD1S0:
000940 83e8      	ST   Y,R30
000941 83f9      	STD  Y+1,R31
000942 836a      	STD  Y+2,R22
000943 837b      	STD  Y+3,R23
000944 9508      	RET
                 
                 __PUTPARD1:
000945 937a      	ST   -Y,R23
000946 936a      	ST   -Y,R22
000947 93fa      	ST   -Y,R31
000948 93ea      	ST   -Y,R30
000949 9508      	RET
                 
                 __PUTPARD2:
00094a 939a      	ST   -Y,R25
00094b 938a      	ST   -Y,R24
00094c 93ba      	ST   -Y,R27
00094d 93aa      	ST   -Y,R26
00094e 9508      	RET
                 
                 __SWAPD12:
00094f 2e18      	MOV  R1,R24
000950 2f86      	MOV  R24,R22
000951 2d61      	MOV  R22,R1
000952 2e19      	MOV  R1,R25
000953 2f97      	MOV  R25,R23
000954 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000955 2e1b      	MOV  R1,R27
000956 2fbf      	MOV  R27,R31
000957 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000958 2e1a      	MOV  R1,R26
000959 2fae      	MOV  R26,R30
00095a 2de1      	MOV  R30,R1
00095b 9508      	RET
                 
                 __CPD10:
00095c 9730      	SBIW R30,0
00095d 4060      	SBCI R22,0
00095e 4070      	SBCI R23,0
00095f 9508      	RET
                 
                 __SAVELOCR6:
000960 935a      	ST   -Y,R21
                 __SAVELOCR5:
000961 934a      	ST   -Y,R20
                 __SAVELOCR4:
000962 933a      	ST   -Y,R19
                 __SAVELOCR3:
000963 932a      	ST   -Y,R18
                 __SAVELOCR2:
000964 931a      	ST   -Y,R17
000965 930a      	ST   -Y,R16
000966 9508      	RET
                 
                 __LOADLOCR6:
000967 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000968 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000969 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00096a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00096b 8119      	LDD  R17,Y+1
00096c 8108      	LD   R16,Y
00096d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   3 r4 :   3 r5 :   4 r6 :   4 r7 :   0 
r8 :   2 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  57 r17:  64 r18:  48 r19:  35 r20:  50 r21:  90 r22: 109 r23:  95 
r24:  73 r25:  61 r26: 213 r27:  97 r28:  31 r29:   1 r30: 377 r31: 151 
x  :  40 y  : 385 z  :  24 
Registers used: 27 out of 35 (77.1%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  23 add   :  16 
adiw  :  33 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  59 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 177 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  53 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  15 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   2 inc   :   5 jmp   :  31 ld    :  52 ldd   : 195 ldi   : 210 
lds   :   2 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  86 movw  :  51 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :   8 pop   :  22 push  :  22 rcall :  84 ret   :  94 
reti  :   0 rjmp  : 134 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  29 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 105 std   :  86 sts   :   3 sub   :   6 subi  :  49 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 79 out of 116 (68.1%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0012dc   4738     90   4828   32768  14.7%
[.dseg] 0x000100 0x000320      0     32     32    2048   1.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 11 warnings
